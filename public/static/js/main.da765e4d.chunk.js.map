{"version":3,"sources":["components/auth/styles/images/icons/favicon.ico","helpers/getWeb3Vote.js","types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/electionReducer.js","reducers/authReducer.js","reducers/listaReducer.js","reducers/candidatoReducer.js","reducers/userReducer.js","reducers/cargoReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareElections.js","actions/elections.js","actions/auth.js","router/PrivateRoute.js","router/PublicRoute.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","components/elecciones/EleccionModal.js","components/elecciones/EleccionScreen.js","helpers/fileUpload.js","actions/lists.js","components/listas/ListaModal.js","components/cargos/CargoModal.js","components/listas/ListaScreen.js","actions/candidates.js","components/candidatos/CandidatoModal.js","components/candidatos/CandidatoScreen.js","components/ui/NavAdmin.js","actions/users.js","components/user/UserModal.js","components/user/UserScreen.js","components/vote/ResultsScreen.js","router/DashboardRoutes.js","components/vote/VoteScreen.js","components/ui/NavUser.js","router/DashboardUser.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["module","exports","myContract","Provider","require","address","Transaction","isInit","init","a","provider","web3","Web3","eth","net","getId","networkId","Contract","voteContractBuild","abi","networks","vote","proposal","ci","console","log","methods","Number","send","from","then","AddListas","proposals","getWinner","winnerName","call","getStats","types","initialState","modalOpen","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","election","activeElection","enableElection","checking","cedula","lista","activeLista","candidatos","activeCandidato","usuarios","activeUser","cargos","activeCargo","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","eleccion","auth","candidato","cargo","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareElections","elections","electionAddNew","electionSetActive","electionUpdated","electionStartLoading","dispatch","resp","json","elecciones","electionLoaded","electionDeleted","login","startLogout","clear","logout","PrivateRoute","children","useSelector","uid","to","PublicRoute","useForm","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","valuesLogin","handleInputChangeLogin","correo","password","valuesRegister","Rcorreo","Rnombre","Rcedula","Rpassword","Rpassword2","useDispatch","className","onSubmit","preventDefault","ok","setItem","rol","Swal","fire","msg","errors","startLogin","data-validate","onChange","src","uiOpenModal","uiCloseModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","initEvent","nombre","descripcion","EleccionModal","formValues","setFormValues","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","trim","length","getState","electionStartAddNew","minDate","placeholder","autoComplete","rows","EleccionScreen","onDeletElection","showCancelButton","confirmButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","focusConfirm","focusCancel","resultado","lists","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onClick","key","format","fileUpload","file","formData","FormData","append","cloudResp","secure_url","listaAddNew","listaSetActive","listaUpdated","listaStartLoading","listaLoaded","listas","listaDeleted","img","ListaModal","idEleccion","nuevo","listaStartAddNew","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","alt","tama√±o","ListaScreen","listasBlockchain","setIdEleccion","obtenerListas","candidates","tx","catch","err","selectedElection","search","index","push","imageUrl","imageWidth","imageHeight","imageAlt","cancelButtonText","i","pop","candidatoAddNew","candidatoSetActive","candidatoClearActiveCandidato","candidatoUpdated","event","candidatoDeleted","candidatoStartLoading","candidatoLoaded","apellido","CandidatoModal","idLista","candidatoStartAddNew","CandidatoScreen","setIdLista","selectedLista","list","candidate","NavAdmin","isActive","userAddNew","userSetActive","userUpdated","userDeleted","userStartLoading","userLoaded","verificarCedula","validator","UserModal","cedulaValid","setCedulaValid","setCorreoValid","validate","userStartAddNew","UserScreen","users","onDeletUser","usuario","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","dataset","label","backgroundColor","borderColor","borderWidth","ResultsScreen","winner","setWinner","stats","setStats","setProposals","totalVotes","setTotalVotes","getStatsF","setInterval","labels","porc","totalVotantes","datasets","total","reduce","acc","item","cont","percent","val","toFixed","options","responsive","plugins","legend","display","tooltips","callbacks","tooltipItem","datasetIndex","previousValue","currentValue","currentIndex","array","Math","floor","fechaActual","height","role","width","aria-valuenow","aria-valuemin","aria-valuemax","DashboardRoutes","path","element","VoteScreen","setState","listasEleccion","isSameOrAfter","onSelectElection","NavUser","DashboardUser","AppRouter","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da765e4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","import Swal from 'sweetalert2';\nimport Web3 from 'web3';\nimport voteContractBuild from '../build/contracts/Vote.json';\nconst Provider = require('@truffle/hdwallet-provider');\n\nconst Tx = require('ethereumjs-tx').Transaction\nconst address = '0xc01dda89e6151D19005c29DeEf364618273Ec148';\nconst privateKey = '62e93d412b219ecb9afd757e99070d6d7bc2bd02de6a77c6450082e46c487c08';\nconst infuraUrl = 'https://rinkeby.infura.io/v3/02e6ba60363b49b7922a4f9ad1a87b4c';\n\nlet selectedAccount\nlet voteContract\n\nlet myContract\n\nlet isInit = false\n\nexport const init2 = async () => {\n  const providerUrl_default = 'https://rinkeby.infura.io/v3/02e6ba60363b49b7922a4f9ad1a87b4c' // Ganache-cli\n  // const providerUrl_default = 'http://localhost:7545' // Ganache desktop\n  const providerUrl = process.env.PROVIDER_URL || providerUrl_default\n\n  // check for metamask\n  let provider = window.ethereum\n  if (typeof provider !== 'undefined') {\n    provider\n      .request({ method: 'eth_requestAccounts' })\n      .then(accounts => {\n        console.log('accounts: ', accounts)\n        selectedAccount = \"0xc01dda89e6151D19005c29DeEf364618273Ec148\";\n        console.log('cuenta selec', accounts[0]);\n      })\n      .catch(err => {\n        console.log(err)\n        return\n      })\n  }\n  // at wallet change\n  // window\n  //   .ethereum.on('accountsChanged', accounts => {\n  //     console.log('accounts: ', accounts)\n  //     selectedAccount = 0xc01dda89e6151D19005c29DeEf364618273Ec148;\n  //   })\n\n  const web3 = new Web3(providerUrl)\n  //const networkId = await web3.eth.net.getId()\n  const networkId = '4'\n\n  console.log(networkId)\n\n  selectedAccount = \"0xc01dda89e6151D19005c29DeEf364618273Ec148\";\n\n  /// testeando -------\n\n  const addressFrom = '0xc01dda89e6151D19005c29DeEf364618273Ec148';\n  const privateKey = new Buffer('62e93d412b219ecb9afd757e99070d6d7bc2bd02de6a77c6450082e46c487c08', 'hex');\n\n  // the destination address\n  //const addressTo =   voteContractBuild.networks[networkId].address;\n\n  const addressTo = \"0xd971d334911e4e8fdbf69c629f32882e35a55ca6\";\n\n\n\n\n\n  //  web3.eth.getTransactionCount(addressFrom).then(txCount => {\n  //         const txData = {\n  //           nonce: web3.utils.toHex(txCount),\n  //           gasLimit: web3.utils.toHex(900000),\n  //           gasPrice: gasPrice, // 10-15 gwei should be ok\n  //           to: addressTo,\n  //           from: addressFrom\n  //           // value: web3.utils.toHex(\n  //           //   web3.utils.toWei(\"0.0001\", \"ether\")  // amount you want to send\n  //           // )\n  //         };\n\n  //       }\n\n\n\n  //const transaction = new Tx(txData, { chain: \"rinkeby\" }); //transaction = new Tx(txData, {'chain':'mainnet'});\n  //transaction.sign(privateKey);  // remove .substring(2) if you get errors\n\n  //   web3.eth\n  //     .sendSignedTransaction(\"0x\" + transaction.serialize().toString(\"hex\"))\n  //     .on(\"transactionHash\", function(txHash) {\n  //       // show tx hash ?\n  //     })\n  //     .on(\"receipt\", function(receipt) {\n  //       console.log(\"receipt:\" + receipt);\n  //     })\n  //     .on(\"confirmation\", function(confirmationNumber, receipt) {\n  //       if (confirmationNumber >= 1) {\n  //         // message that tx went ok\n  //       }\n  //     })\n  //     .on(\"error\", function(error) {\n  //       console.log(\"error sending ETH\", error);\n  //     });\n  // });\n  // voteContract = new web3.eth.Contract(\n  //   voteContractBuild.abi,\n  //   voteContractBuild.networks[networkId].address\n  //test 1\n  // const networkData = voteContractBuild.networks[networkId]\n  // if (networkData) {\n  //   //const election = new web3.eth.Contract(voteContractBuild.abi, networkData.address)\n  //   //this.setState({ election })\n  //   voteContract = new web3.eth.Contract(voteContractBuild.abi, voteContractBuild.networks[networkId].address)\n  //   console.log(voteContract)\n\n\n  // } else {\n  //   window.alert('Election contract not deployed to detected network.')\n  // }\n\n  // fin test 1\n\n  voteContract = new web3.eth.Contract(voteContractBuild.abi, voteContractBuild.networks[networkId].address)\n  console.log(voteContract)\n  isInit = true\n}\n\n\nexport const init = async () => {\n  const provider = new Provider(privateKey, 'https://rinkeby.infura.io/v3/02e6ba60363b49b7922a4f9ad1a87b4c'); \n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  myContract = new web3.eth.Contract(\n    voteContractBuild.abi,\n    voteContractBuild.networks[networkId].address\n  );\n\n  // console.log(await myContract.methods.data().call());\n  // console.log(`Old data value: ${await myContract.methods.data().call()}`);\n  // const receipt = await myContract.methods.setData(3).send({ from: address });\n  // console.log(`Transaction hash: ${receipt.transactionHash}`);\n  // console.log(`New data value: ${await myContract.methods.data().call()}`);\n\n  isInit = true\n}\n\n\nexport const vote = async ({ proposal, ci }) => {\n  if (!isInit) await init()\n  console.log('asi llegan los datos', proposal, ci)\n  \n  return myContract\n    .methods\n    .vote(Number(proposal), Number(ci))\n    .send({ from: address })\n    .then(vote => vote,\n      );\n    \n    \n}\n\nexport const AddListas = async (proposals) => {\n  if (!isInit) await init()\n  console.log(proposals, 'esto llega en arrays para ya agregar a blockchain')\n  return myContract\n    .methods\n    .AddListas(proposals) // \n    //.AddListas(Array(proposals)) // \n    .send({ from: address})\n    .then(vote => vote);\n\n}\n\n\nexport const getWinner = async () => {\n  if (!isInit) await init()\n\n  return myContract\n    .methods\n    .winnerName()\n    .call()\n}\n\nexport const getStats = async () => {\n  if (!isInit) await init()\n\n  return myContract\n    .methods\n    .getStats()\n    .call()\n}\n\n","\nexport const types = {\n    //abrir y cerra el formulario model para ingresar datos\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    //elecciones estados \n    electionSetActive: '[election] Set Active',\n    electionStartAddNew: '[election] Start Add new',\n    electionAddNew: '[election] Add new',\n    electionClearActiveElection: '[election] Clear active election', //limpiar del store la eleccion activa\n    electionUpdated: '[election] Election updated', //actualizar eleccion\n    electionDeleted: '[election] Election deleted', // eliminar eleccion\n    electionLoaded: '[election] Election loaded',\n    electionLogout : '[election] Election logout',\n    electionLoadedByList: '[byId] Election loadedList',\n\n    electionEnabled: '[election] Enable Active', // habilitar eleccion global\n    electionClearEnable: '[election] Clear enable election', //limpiar del store la eleccion habilitada\n\n\n\n\n    //redux de listas------------------------------------------------\n    listaSetActive: '[lista] Set Active',\n    listaStartAddNew: '[lista] Start Add new',\n    listaAddNew: '[lista] Add new',\n    listaClearActiveElection: '[lista] Clear active lista', //limpiar del store la eleccion activa\n    listaUpdated: '[lista] Lista updated', //actualizar eleccion\n    listaDeleted: '[lista] Lista deleted', // eliminar eleccion\n    listaLoaded: '[lista]  Lista loaded',\n    listaLogout : '[lista] Lista logout',\n\n\n    //cargos redux\n      //redux de listas------------------------------------------------\n      cargoSetActive: '[cargo] Set Active',\n      cargoStartAddNew: '[cargo] Start Add new',\n      cargoAddNew: '[cargo] Add new',\n      cargoClearActiveCargo: '[cargo] Clear active cargo', //limpiar del store la eleccion activa\n      cargoDeleted: '[cargo deleted', // eliminar eleccion\n      cargoLoaded: '[cargo]  cargo loaded',\n      cargoLogout : '[cargo] cargo logout',\n  \n\n    //redux de candidatos ----------------\n\n     //elecciones estados \n     candidatoSetActive: '[candidato] Set Active',\n     candidatoStartAddNew: '[candidato] Start Add new',\n     candidatoAddNew: '[candidato] Add new',\n     candidatoClearActiveCandidato: '[candidato] Clear active Candidato', //limpiar del store la eleccion activa\n     candidatoUpdated: '[candidato] Candidato updated', //actualizar eleccion\n     candidatoDeleted: '[candidato] Candidato deleted', // eliminar eleccion\n     candidatoLoaded: '[candidato]  Candidato loaded',\n     candidatoLogout : '[candidato] Candidato logout',\n\n      //usuarios estados \n      userSetActive: '[user] Set Active',\n      userStartAddNew: '[user] Start Add new',\n      userAddNew: '[user] Add new',\n      userClearActiveUser: '[user] Clear active User', //limpiar del store la eleccion activa\n      userUpdated: '[user] User updated', //actualizar eleccion\n      userDeleted: '[user] User deleted', // eliminar eleccion\n      userLoaded: '[user]  User loaded',\n      userLogout : '[user] User logout',\n \n\n\n\n    \n    //esatdo para el login Authorization\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n//agrega lo que quiere hacer con las funciones en types\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'Cumplea√±os del jefe',\n        start: moment().toDate(),\n        end: moment().add( 2, 'hours' ).toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: '123',\n            name: 'Fernando'\n        }\n    }],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","\n// election:[{\n//     id: new Date().getTime(),\n//     name: 'election 2021',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     description: 'elections students',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }]\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    election: [],\n    activeElection: null,\n    enableElection: null\n};\n\n\nexport const electionReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.electionSetActive:\n            return {\n                ...state,\n                activeElection: action.payload\n            }\n            //eleccion global habilitada \n            case types.electionEnabled:\n            return {\n                ...state,\n                enableElection: action.payload\n            }\n        \n        case types.electionAddNew:\n            return {\n                ...state,\n                election: [\n                    ...state.election,\n                    action.payload\n                ]\n            }\n    \n        case types.electionClearActiveElection:\n            return {\n                ...state,\n                activeElection: null\n            }\n\n            case types.electionClearEnable:\n                return {\n                    ...state,\n                    enableElection: null\n                }\n    \n\n        case types.electionUpdated:\n            return {\n                ...state,\n                election: state.election.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.electionDeleted:\n            return {\n                ...state,\n                election: state.election.filter(\n                    //e => ( e.id !== state.activeElection.id )\n                    e => ( e.id !== state.activeElection.id )\n                ),\n                activeElection: null\n            }\n\n            case types.electionLoaded:\n                return {\n                    ...state,\n                    election: [ ...action.payload ]\n                }\n\n            \n                \n                case types.electionLogout:\n                    return {\n                        ...initialState\n                    }\n        \n    \n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n    cedula:null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","\nimport { types } from '../types/types';\n\nconst initialState = {\n    lista: [],\n    activeLista: null\n};\n\n\nexport const listaReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.listaSetActive:\n            return {\n                ...state,\n                activeLista: action.payload\n            }\n        \n        case types.listaAddNew:\n            return {\n                ...state,\n                lista: [\n                    ...state.lista,\n                    action.payload\n                ]\n            }\n    \n        case types.listaClearActiveElection:\n            return {\n                ...state,\n                activeLista: null\n            }\n\n\n        case types.listaUpdated:\n            return {\n                ...state,\n                lista: state.lista.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.listaDeleted:\n            return {\n                ...state,\n                lista: state.lista.filter(\n                    //e => ( e.id !== state.activeElection.id )\n                    e => ( e.id !== state.activeLista.id )\n                ),\n                activeLista: null\n            }\n\n            case types.listaLoaded:\n                return {\n                    ...state,\n                    lista: [ ...action.payload ]\n                }\n\n                case types.listaLogout:\n                    return {\n                        ...initialState\n                    }\n        \n    \n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    candidatos: [],\n    activeCandidato: null\n};\n\n\nexport const candidatoReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.candidatoSetActive:\n            return {\n                ...state,\n                activeCandidato: action.payload\n            }\n        \n        case types.candidatoAddNew:\n            return {\n                ...state,\n                candidatos: [\n                    ...state.candidatos,\n                    action.payload\n                ]\n            }\n    \n        case types.candidatoClearActiveCandidato:\n            return {\n                ...state,\n                activeCandidato: null\n            }\n\n\n        case types.candidatoUpdated:\n            return {\n                ...state,\n                candidatos: state.candidatos.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.candidatoDeleted:\n            return {\n                ...state,\n                candidatos: state.candidatos.filter(\n                    e => ( e.id !== state.activeCandidato.id )\n                ),\n                activeCandidato: null\n            }\n\n        case types.candidatoLoaded:\n            return {\n                ...state,\n                candidatos: [ ...action.payload ]\n            }\n\n        case types.candidatoLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    usuarios: [],\n    activeUser: null\n};\n\n\nexport const userReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.userSetActive:\n            return {\n                ...state,\n                activeUser: action.payload\n            }\n        \n        case types.userAddNew:\n            return {\n                ...state,\n                usuarios: [\n                    ...state.usuarios,\n                    action.payload\n                ]\n            }\n    \n        case types.userClearActiveUser:\n            return {\n                ...state,\n                activeUser: null\n            }\n\n\n        case types.userUpdated:\n            return {\n                ...state,\n                usuarios: state.usuarios.map(\n                    e => ( e._id === action.payload._id ) ? action.payload : e\n                )\n            }\n        \n        case types.userDeleted:\n            return {\n                ...state,\n                usuarios: state.usuarios.filter(\n                    e => ( e._id !== state.activeUser._id )\n                ),\n                activeUser: null\n            }\n\n        case types.userLoaded:\n            return {\n                ...state,\n                usuarios: [ ...action.payload ]\n            }\n\n        case types.userLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    cargos: [],\r\n    activeCargo: null\r\n};\r\n\r\n\r\nexport const cargoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.cargoSetActive:\r\n            return {\r\n                ...state,\r\n                activeCargo: action.payload\r\n            }\r\n\r\n        case types.cargoAddNew:\r\n            return {\r\n                ...state,\r\n                cargos: [\r\n                    ...state.cargos,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.cargoClearActiveCargo:\r\n            return {\r\n                ...state,\r\n                activeCargo: null\r\n            }\r\n\r\n\r\n\r\n        case types.cargoDeleted:\r\n            return {\r\n                ...state,\r\n                cargos: state.cargos.filter(\r\n                    e => (e.id !== state.activeCargo.id)\r\n                ),\r\n                activeCargo: null\r\n            }\r\n\r\n        case types.cargoLoaded:\r\n            return {\r\n                ...state,\r\n                cargos: [...action.payload]\r\n            }\r\n\r\n        case types.cargoLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { electionReducer } from './electionReducer';\nimport { authReducer } from './authReducer';\nimport { listaReducer } from './listaReducer';\nimport { candidatoReducer } from './candidatoReducer';\nimport { userReducer } from './userReducer';\nimport { cargoReducer } from './cargoReducer';\n//import { electionByIdReducer } from './electionByIdReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    eleccion: electionReducer,\n    auth: authReducer,\n    lista: listaReducer,\n    candidato: candidatoReducer,\n    //byId: electionByIdReducer\n    user: userReducer,\n    cargo: cargoReducer,\n    // TODO: AuthReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\n\n\nexport const prepareElections = ( elections = [] ) => {\n\n    return elections.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n             start: moment( e.start ).toDate(),\n            //end:moment(e.end).format('YYYY-MM-DD HH:mm:ss'),\n            //start: moment(e.start).format('YYYY-MM-DD HH:mm:ss'),\n        })\n    );\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareElections } from \"../helpers/prepareElections\";\nimport { types } from \"../types/types\";\n\nexport const electionStartAddNew= (election) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('elecciones', election, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                election.id = body.eleccion.id; //id de la eleccion una vez en la bdd\n                election.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( election );\n                dispatch( electionAddNew( election ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n};\n\n\n//estas funciones se muestran en los screens para llamarlas y modificarlas\nconst electionAddNew = (election) => ({\n    type: types.electionAddNew,\n    payload: election\n});\n\nexport const electionSetActive = (election) => ({\n    type: types.electionSetActive,\n    payload: election\n});\n\nexport const electionClearActiveElection = () => ({\n    type: types.electionClearActiveElection\n});\n\nexport const  electionStartUpdated=(election)=>{\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`elecciones/${election.id}`, election, 'PUT');\n            const body = await resp.json();\n\n            console.log(election)\n\n            if ( body.ok ) {\n                dispatch(electionUpdated(election));\n                console.log('sie entra al update')\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n               \n            }\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n}\n\n\nconst electionUpdated = ( election ) => ({\n    type: types.electionUpdated,\n    payload: election\n});\n\n\n// export const electionStartLoadingByList = (election) => {\n//     return async(dispatch) => {\n\n//         try {\n            \n//             const resp = await fetchConToken(`elecciones/${election.idEleccion}`, 'GET');\n\n//             const body = await resp.json();\n//             console.log(body.elecciones.lists, 'lo q envia')\n           \n//             dispatch( electionLoadedByList( body.elecciones.lists ) );\n\n//         } catch (error) {\n//             console.log(error)\n//         }\n\n//     }\n// }\n\n// const electionLoadedByList = (elections) => ({\n//     type: types.electionLoadedByList,\n//     payload: elections\n// })\n\nexport const electionStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'elecciones' );\n            const body = await resp.json();\n            console.log(body)\n            const elections = prepareElections( body.elecciones );\n            dispatch( electionLoaded( elections ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst electionLoaded = (elections) => ({\n    type: types.electionLoaded,\n    payload: elections\n})\n\nexport const electionStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().eleccion.activeElection;\n        console.log(id)\n        try {\n            const resp = await fetchConToken(`elecciones/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( electionDeleted() );\n                console.log('entra a eliminar')\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\n const electionDeleted = () => ({ type: types.electionDeleted });\n\n export const electionLogout =() => ({ type: types.electionLogout });\n\n\n\n //metodo para obtener el estado global de la eleccion para obtener resultados/votaciones /addd usuarios\n //y buscar las elecciones conforme a la eleccion activacion\nexport const electionEnable = (election) => ({\n    type: types.electionEnabled,\n    payload: election\n});\n\nexport const electionClearEnable = () => ({\n    type: types.electionClearEnable\n});\n","import Swal from 'sweetalert2';\nimport { fetchSinToken,  fetchConToken} from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { electionLogout } from './elections';\n\nexport const startLogin=(correo, password) => {\n    return async(dispatch)=>{\n        const resp= await fetchSinToken('auth/login', {correo, password}, 'POST');\n        const body= await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n          //busca en la respuesat json del body si tiene objetos ir esacalando user.name o name\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n                cedula: body.cedula,\n                rol: body.rol,\n                \n                \n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            console.log(body.errors)\n        }\n        \n\n    }\n}\n\nexport const startRegister=(cedula, nombre, correo, password) => {\n    return async(dispatch)=>{\n        const resp= await fetchSinToken('auth/new', {cedula, nombre, correo, password, rol:\"ADMIN_ROLE\"}, 'POST');\n        const body= await resp.json();\n        console.log(body)\n        if( body.ok ) {\n            \n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n          \n            dispatch( login({\n                //busca en la respuesat json del body si tiene objetos ir esacalando user.name o name\n                uid: body.uid,\n                name: body.nombre\n                \n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            \n        }\n        \n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await  fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.nombre\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( electionLogout());\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\n\n\n\nexport const PrivateRoute = ({ children }) => {\n\n    const { uid} = useSelector( state => state.auth);\n\n    return !!uid\n        ? children\n        : <Navigate to=\"/login\" />\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Navigate } from 'react-router-dom';\n\n\n\n\n\nexport const PublicRoute = ({ children }) => {\n\n   \n    const {uid} = useSelector( state => state.auth);\n\n    return (!!uid)\n        ? <Navigate to=\"/\" />\n        : children\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nimport './login.css';\n\nimport './styles/css/util.css';\nimport './styles/css/main.css';\nimport './styles/vendor/select2/select2.min.css';\nimport './styles/vendor/daterangepicker/daterangepicker.css';\nimport './styles/vendor/animsition/css/animsition.min.css';\nimport './styles/vendor/css-hamburgers/hamburgers.min.css';\nimport './styles/vendor/animate/animate.css';\nimport './styles/images/icons/favicon.ico';\n\nimport './styles/fonts/iconic/css/material-design-iconic-font.min.css';\nimport './styles/fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './styles/vendor/bootstrap/css/bootstrap.min.css';\n\n\n\n\n\n\nexport const LoginScreen = () => {\n\n\tconst [valuesLogin, handleInputChangeLogin] = useForm({\n\t\t\"correo\": \"alekz@gmail.com\",\n\t\t\"password\": \"123456\"\n\n\t})\n\tconst { correo, password } = valuesLogin;\n\n\tconst [valuesRegister, handleInputChangeRegister] = useForm({\n\t\t\"Rcorreo\": \"alekz@gmail.com\",\n\t\t\"Rnombre\": \"Alekz\",\n\t\t\"Rcedula\": \"1004542369\",\n\t\t\"Rpassword\": \"123456\",\n\t\t\"Rpassword2\": \"123456\"\n\t})\n\tconst { Rcorreo, Rnombre, Rcedula, Rpassword, Rpassword2 } = valuesRegister;\n\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(valuesLogin)\n\t\tdispatch(startLogin(correo, password));\n\t}\n\n\tconst handleSubmitRegister = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(valuesRegister);\n\n\t\tdispatch(startRegister(Rcedula, Rnombre, Rcorreo, Rpassword))\n\n\t\tif (Rpassword !== Rpassword2) {\n\t\t\treturn Swal.fire('Error', 'las contrase√±as deben ser iguales', 'error')\n\t\t}\n\t\t//dispatch( startLogin(correo, password));\n\t}\n\n\n\treturn <div>\n\n\t\t<div className=\"limiter fondo\">\n\t\t\t<div className=\"container-login100\">\n\t\t\t\t<div className=\"wrap-login100\">\n\t\t\t\t\t<form className=\"login100-form validate-form\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t<span className=\"login100-form-title p-b-26\">\n\t\t\t\t\t\t\tWelcome\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"login100-form-title p-b-48\">\n\t\t\t\t\t\t\t<i className=\"zmdi zmdi-font\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Email</small>\n\n\t\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Valid email is: a@b.c\">\n\t\t\t\t\t\t\t<input className=\"input100\" type=\"text\" \n\t\t\t\t\t\t\tname=\"correo\" value={correo} onChange={handleInputChangeLogin}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Password</small>\n\n\t\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\n\t\t\t\t\t\t\t<span className=\"btn-show-pass\">\n\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-eye\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input className=\"input100\" type=\"password\" \n\t\t\t\t\t\t\tname=\"password\" value={password} onChange={handleInputChangeLogin} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"container-login100-form-btn\">\n\t\t\t\t\t\t\t<div className=\"wrap-login100-form-btn\">\n\t\t\t\t\t\t\t\t<div className=\"login100-form-bgbtn\"></div>\n\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\">\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"text-center p-t-115\">\n\t\t\t\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t\t\t\tDon‚Äôt have an account?\n\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<script src=\"'./styles/js/main.js\"></script>\n\t\t<script src=\"'./styles/vendor/countdowntime/countdowntime.js\"></script>\n\n\t\t<script src=\"'./styles/vendor/daterangepicker/daterangepicker.js\"></script>\n\t\t<script src=\"'./styles/vendor/daterangepicker/moment.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/select2/select2.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/bootstrap/js/bootstrap.min.js\"></script>\n\n\t\t<script src=\"'./styles/vendor/bootstrap/js/popper.js\"></script>\n\t\t<script src=\"'./styles/vendor/animsition/js/animsition.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/jquery/jquery-3.2.1.min.js\"></script>\n\n\n\n\t</div>\n}","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { electionClearActiveElection, electionStartAddNew, electionStartUpdated} from '../../actions/elections';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(0, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  nombre: '',\n  descripcion: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate()\n}\n\n\nexport const EleccionModal = () => {\n\n\n  //const [isOpen, setIsOpen] = useState(true); // abrir y cerrar el formulario\n  // toma los valores del state ui\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeElection } = useSelector(state => state.eleccion);\n\n\n  //const [dateStart, setDateStart] = useState(now.toDate()); //estado de las fechas del form\n  //const [dateEnd, setDateEnd] = useState(nowPlus1.toDate()); //estdo fin de la fecha del form\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre, descripcion, start, end } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n\n  useEffect(() => {\n    if (activeElection) {\n      setFormValues(activeElection);\n      //console.log('complet stado')\n    } else {\n      setFormValues(initEvent);\n      //console.log('borrando stado')\n    }\n  }, [activeElection, setFormValues])\n\n  //console.log(activeElection)\n\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(electionClearActiveElection());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n  const handleStartDateChange = (e) => {\n    //setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    // setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e\n    })\n  }\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    //console.log(formValues, 'enviados desde el form')\n\n    //validaciones\n    // const momentStart = moment(start);\n    // const momentEnd = moment(end);\n\n    // if (momentStart.isSameOrAfter(momentEnd)) {\n    //   return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n    // }\n\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeElection) {\n      dispatch(electionStartUpdated(formValues))\n    } else {\n      dispatch(electionStartAddNew(formValues));\n    }\n\n\n    setTitleValid(true);\n    closeModal();\n\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h1> {(activeElection) ? 'Editar eleccion' : 'Nueva eleccion'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={end}\n            minDate={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre de la eleccion\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Descripcion\"\n            rows=\"5\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Descripcion adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { electionSetActive, electionStartLoading, electionStartDelete } from '../../actions/elections';\nimport { uiOpenModal } from '../../actions/ui';\nimport moment from 'moment'\nimport Swal from 'sweetalert2';\n\nimport { EleccionModal } from './EleccionModal';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\n\nexport const EleccionScreen = () => {\n\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n\n  //para controlar si tiene listas cada eleccion \n\n  //console.log(elections, \"si llega estos datos\");\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n    dispatch(uiOpenModal());\n  }\n\n  const onSelectElection = (e) => {\n    dispatch(electionSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletElection = (e) => {\n    dispatch(electionSetActive(e));\n\n    \n\n    Swal.fire({\n      title: \"Are you sure about deleting this file?\",\n      type: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete It\",\n      confirmButtonColor: \"#ff0055\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n      focusConfirm: false,\n      focusCancel: true\n    }).then(resultado => {\n      if (resultado.value) {\n\n        if(e.lists?.length > 0) {\n          toast.error('Tiene Listas', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n        }else{\n          dispatch(electionStartDelete());\n        }\n        \n\n      } else {\n\n      }\n\n    }\n    )\n\n  }\n\n // console.log('llega a elecc');\n  return (\n\n\n\n    <div >\n      <br />\n      <h2 className=\"titulos\">Elecciones</h2>\n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n      <br />\n      <ToastContainer></ToastContainer>\n      <div className=\"form-screen \">\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Descripcion</th>\n              <th>Fecha Inicio</th>\n              <th>Fecha Fin</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              elections.map((eleccion) => {\n                return (\n                  <tr key={eleccion.id}>\n                    <td>{eleccion.nombre}</td>\n                    <td>{eleccion.descripcion}</td>\n                    <td>{moment(eleccion.start).format('YYYY-MM-DD HH:mm:ss')}</td>\n                    <td>{moment(eleccion.end).format('YYYY-MM-DD HH:mm:ss')}</td>\n                    <td>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => onSelectElection(eleccion)}\n\n                      >\n                        <i className=\"fas fa-edit\"></i>\n                      </button>\n                      {\"   \"}\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => onDeletElection(eleccion)}\n                      >\n                        <i className=\"fas fa-trash-alt\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n\n      <EleccionModal />\n\n\n\n    </div>\n  );\n}\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/universidad-tecnica-del-norte/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','react-vote');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n\n    // return url de la imagen\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\n\nexport const listaStartAddNew= (lista) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('listas', lista, 'POST');\n            const body = await resp.json();\n\n            console.log(body, 'lo q viene del formulario')\n\n            if ( body.ok ) {\n                lista.id = body.lista.id; //id de la eleccion una vez en la bdd\n                lista.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( lista, 'lo q se guarda en la bdd' );\n                dispatch( listaAddNew( lista ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n};\n\n\n//estas funciones se muestran en los screens para llamarlas y modificarlas\nconst listaAddNew = (lista) => ({\n    type: types.listaAddNew,\n    payload: lista\n});\n\nexport const listaSetActive = (lista) => ({\n    type: types.listaSetActive,\n    payload: lista\n});\n\nexport const listaClearActiveLista = () => ({\n    type: types.listaClearActiveElection\n});\n\nexport const  listaStartUpdated=(lista)=>{\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`listas/${lista.id}`, lista, 'PUT');\n            const body = await resp.json();\n\n            console.log(lista)\n\n            if ( body.ok ) {\n                dispatch(listaUpdated(lista));\n                console.log('sie entra al update')\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n               \n            }\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n}\n\n\nconst listaUpdated = ( lista ) => ({\n    type: types.listaUpdated,\n    payload: lista\n});\n\n\nexport const listaStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'listas' );\n            const body = await resp.json();\n            console.log(body)\n            //const listas = prepareElections( body.lista );\n            dispatch( listaLoaded( body.listas ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst listaLoaded = (lists) => ({\n    type: types.listaLoaded,\n    payload: lists\n})\n\nexport const listaStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().lista.activeLista;\n        console.log(id)\n        try {\n            const resp = await fetchConToken(`listas/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( listaDeleted() );\n                console.log('entra a eliminar')\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\n const listaDeleted = () => ({ type: types.listaDeleted });\n\n export const listaLogout =() => ({ type: types.listaLogout });\n\n\n //metodo para agregar imagenes\n export const startUploading = ( file ) => {\n    return async( ) => {\n\n\n        console.log(file);\n        //console.log(activeLista);\n\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload( file );\n        console.log(fileUrl)\n        Swal.close();\n        \n        return fileUrl;\n        \n    }\n        // activeLista.url = fileUrl;\n\n        // dispatch( startSaveNote( activeLista ) )\n        \n\n         \n}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { listaClearActiveLista, listaStartAddNew, listaStartLoading, listaStartUpdated } from '../../actions/lists';\nimport { electionStartLoading } from '../../actions/elections';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fileUpload } from '../../helpers/fileUpload';\nimport Swal from 'sweetalert2';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\n\nconst initEvent = {\n  nombre: '',\n  img: '',\n  descripcion: '',\n  eleccion: ''\n\n}\n\nexport const ListaModal = ({ idEleccion }) => {\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeLista } = useSelector(state => state.lista);\n\n  const { election: elections } = useSelector(state => state.eleccion);\n\n  //modificando el sleector para mandar la eleccion desde reducer\n  //const [listas] = useSelector(state => [state.byId.election]);\n\n  // useEffect(() => {\n  //   console.log('change global lits');\n\n  // }, [listas])\n\n\n\n  //carga las eleccione\n\n  //console.log(elections);\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n    console.log('use efect active')\n\n  }, [dispatch])\n\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre, descripcion, eleccion, img } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n  //para imagenes test\n  //const [img, setimg] = useState(\"\");\n\n\n  // useEffect(() => {\n\n  // },[img])\n\n\n\n  useEffect(() => {\n    if (activeLista) {\n      setFormValues(activeLista);\n\n    } else {\n      setFormValues(initEvent);\n\n    }\n  }, [activeLista, setFormValues])\n\n  //console.log(activeElection)\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(listaClearActiveLista());\n    //dispatch(listaStartLoading());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n\n\n  }\n\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n\n    //console.log(formValues)\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    // const nuevo= {...formValues, eleccion: formValues.eleccion.length===0?\n    //    elections[0].id\n    //     :formValues.eleccion}\n\n    //funcionando\n    const nuevo = {\n      ...formValues, eleccion:\n        idEleccion\n    }\n\n    //funcionando con errores\n    // const nuevo= {...formValues, eleccion: idEleccion==='' ? elections[0].id\n    // : idEleccion\n    // }\n    e.preventDefault();\n    //console.log(formValues, 'enviados desde el form')\n\n    //validaciones\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    if (activeLista) {\n      dispatch(listaStartUpdated(formValues))\n    } else {\n      dispatch(listaStartAddNew(nuevo));\n    }\n\n\n    setTitleValid(true);\n    dispatch(listaStartLoading());\n    closeModal();\n\n    //agregado para test\n    //dispatch(electionStartLoadingByList(listas[0].eleccion))\n\n\n  }\n\n\n  //metodo par cargar las imagenes desde cloudflare\n  // const handlePictureClick = () => {\n  //   document.querySelector('#fileSelector').click();\n  // }\n\n  //pasa el valor al img del objeto antes de crearse\n  const startUploading = (file) => {\n    return async () => {\n\n\n      console.log(file);\n      //console.log(activeLista);\n\n\n      Swal.fire({\n        title: 'Uploading...',\n        text: 'Please wait...',\n        allowOutsideClick: false,\n        onBeforeOpen: () => {\n          Swal.showLoading();\n        }\n      });\n\n      const fileUrl = await fileUpload(file);\n      console.log(fileUrl)\n      setFormValues({ ...formValues, img: fileUrl })\n\n      Swal.close();\n\n\n    }\n  }\n//toma los valores del archivo seleccionado\n  const handleFileChange = (e) => {\n    console.log(e.target.files);\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n\n    console.log(img, 'haber q esta en el state')\n\n\n  }\n\n\n\n\n  if (elections.length === 0) return <h1>Loading</h1>\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h1> {(activeLista) ? 'Editar lista' : 'Nueva lista'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n\n\n        <div className=\"form-group\">\n          <input\n            //id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            // style={{ display: 'none' }}\n            onChange={handleFileChange}\n          />\n\n\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Imagen de la lista</small>\n        </div>\n\n        {\n          (img)\n          && (\n\n            <div className=\"notes__image\">\n              <img className='imgCentrar'\n                src={img}\n                alt=\"\"\n              />\n            </div>\n          )}\n        {/* <div className=\"form-group\">\n          <label>Eleccion</label>\n\n          <select className=\"form-control\"\n            name=\"eleccion\"\n            value={eleccion}\n\n            onChange={handleInputChange}>\n\n            {\n\n              elections.map(election => (\n                <option key={election.id} value={election.id} > {election.nombre} </option>\n              ))\n            }\n\n\n          </select>\n\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\n        </div> */}\n        <br />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre de la lista\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\n        </div>\n\n\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Descripcion\"\n            rows=\"5\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Descripcion adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal >\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { cargoClearActiveCargo, cargoStartAddNew } from '../../actions/cargos';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\n\nconst initEvent = {\n  nombre: '',\n\n}\n\n\nexport const CargoModal = () => {\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeCargo } = useSelector(state => state.cargo);\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre } = formValues;\n\n  //estados para validaciones+\n  const [nameValid, setNameValid] = useState(true);\n\n  useEffect(() => {\n    if (activeCargo) {\n      setFormValues(activeCargo);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeCargo, setFormValues])\n\n\n  const closeModal = (e) => {\n    dispatch(uiCloseModal());\n    dispatch(cargoClearActiveCargo());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (nombre.trim().length < 2) {\n      return setNameValid(false);\n    }\n\n    if (activeCargo) {\n      //dispatch(cargoStartUpdated(formValues))\n    } else {\n      dispatch(cargoStartAddNew(formValues));\n    }\n\n    setNameValid(true);\n    closeModal();\n\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h1> {(activeCargo) ? 'Editar eleccion' : 'Nueva eleccion'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!nameValid && 'is-invalid'} `}\n            placeholder=\"Nombre del cargo\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Cargo para los candidatos</small>\n        </div>\n\n\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { listaSetActive, listaStartDelete, listaStartLoading } from '../../actions/lists';\nimport { ListaModal } from './ListaModal';\nimport { AddListas, getStats, init } from '../../helpers/getWeb3Vote';\nimport Swal from 'sweetalert2';\nimport { electionStartLoading } from '../../actions/elections';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CargoScreen } from '../cargos/CargoScreen';\n\n\nlet tama√±o=0;\n\nexport const ListaScreen = () => {\n\n  let listasBlockchain = [];\n  const [lists] = useSelector(state => [state.lista.lista]);\n  //const [proposal, setproposal] = useState([]);\n\n  //console.log(elections, \"si llega estos datos\");\n\n  //testeando elecciones \n  const [elections] = useSelector(state => [state.eleccion.election]);\n  const [idEleccion, setIdEleccion] = useState(\"\");\n  //const [openList, setOpenList] = useState(false);\n\n  //const [tama√±o, setTama√±o] = useState(0);\n\n  //const [listas] = useSelector(state => [state.byId.election]);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n  //solo de test eset useEffect\n  useEffect(() => {\n    dispatch(listaStartLoading());\n\n  }, [dispatch, idEleccion])\n\n  const handleInputChange = ({ target }) => {\n    const selectedElection = target.value;\n    setIdEleccion(selectedElection)\n\n    //setOpenList(false);\n    //console.log(idEleccion, 'esto viene select ')\n  }\n\n  //borrando\n  // useEffect(() => {\n  //   console.log('haver');\n\n  // }, [idEleccion])\n\n\n  // useEffect(() => {\n\n  //   dispatch(electionStartLoadingByList(idEleccion))\n\n  // }, [dispatch, idEleccion])\n\n\n\n\n  const handleSubmitForm = (e) => {\n\n\n    setIdEleccion(e.target.value)\n\n\n    //const nuevo= {...idEleccion, idEleccion === ''? setIdEleccion(elections[0].id) : e.target.value}\n    //console.log(elections[0].id, 'eso iniciai');\n    //console.log(idEleccion, 'ver como esta el state');\n\n    e.preventDefault();\n\n\n\n    //dispatch(electionStartLoadingByList(idEleccion))\n\n\n\n  }\n  //termina test\n\n\n\n  useEffect(() => {\n    init();\n    obtenerListas();\n\n   \n\n  }, [])\n\n  useEffect(() => {\n\n    dispatch(listaStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n    dispatch(uiOpenModal())\n\n\n\n\n  }\n\n  const onSelectElection = (e) => {\n    dispatch(listaSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletElection = (e) => {\n    dispatch(listaSetActive(e));\n    Swal.fire({\n      title: \"Are you sure about deleting this list?\",\n      type: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete It\",\n      confirmButtonColor: \"#ff0055\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n      focusConfirm: false,\n      focusCancel: true\n    }).then(resultado => {\n      if (resultado.value) {\n\n        if (e.candidates?.length > 0) {\n          toast.error('Tiene candidatos', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else {\n          dispatch(listaStartDelete());\n        }\n\n\n      } else {\n\n      }\n\n    }\n    )\n  }\n\n\n\n\n  const obtenerListas = () => {\n\n    \n    getStats()\n      .then(tx => {\n        console.log(tx);\n        tama√±o= tx.length;\n        console.log('es lo q va ', tx.length );\n        //setproposal(tx)\n      })\n      .catch(err => console.log(err))\n  \n  }\n\n\n  // useEffect(() => {\n  //   //guardar las propuestas en un arraya y mandarlas a la blockchain\n  //   if (lists.length > 0) {\n  //     for (let index = 0; index < lists.length; index++) {\n  //       setproposal(prop => [...prop, (lists[index].nombre)]);\n  //     }\n  //   }\n\n  // }, [lists])\n\n\n\n  const agregarListas = () => {\n\n    obtenerListas();\n\n    if (lists.length > 0) {\n      for (let index = 0; index < lists.length; index++) {\n        //setproposal(prop => [...prop, (lists[index].nombre)]);\n        listasBlockchain.push((lists[index].nombre));\n      }\n      listasBlockchain.push(\"Voto Blanco\");\n      listasBlockchain.push(\"Voto Nulo\");\n\n    }\n\n\n    console.log(listasBlockchain, 'lo q esta en listblocks');\n\n    Swal.fire({\n      title: \"Guardar Listas\",\n      text: \"¬øEst√° seguro de guardar las listas en la blockchain? Una vez guardadas no se podr√°n modificar, ni agregar m√°s listas a la blockchain\",\n      imageUrl: \"https://wetech.mx/wp-content/uploads/2020/12/kisspng-blockchain-vector-graphics-computer-icons-illustra-flvr-calculator-chasing-coins-5bf69839402611.9278574715428874812628.png\",\n      imageWidth: 275,\n      imageHeight: 225,\n      imageAlt: \"Guardar Listas\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n      confirmButtonColor: \"#00ff55\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n\n    }).then(resultado => {\n      if (resultado.value) {\n\n        console.log('como llega el tama√±o blockchain', tama√±o)\n        if (tama√±o > 0) {\n          toast.error('Ya tiene listas en la blockchain', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n\n        } else {\n          // for (let i = 0; i < listasBlockchain.length; i++) {\n          //   console.log(listasBlockchain[i])\n          //   AddListas(listasBlockchain[i])\n          //     .then(tx => {\n          //       //listasBlockchain.pop();\n          //       console.log(tx, 'addd a block');\n          //       //setproposal(\"\");\n          //     })\n          //     .catch(err => {\n          //       console.log(err);\n\n          //     })\n          // }\n\n         \n            console.log(listasBlockchain, 'esto es lo q se piensa enviar')\n            AddListas(listasBlockchain)\n              .then(tx => {\n                //listasBlockchain.pop();\n                console.log(tx, 'addd a block');\n                //setproposal(\"\");\n              })\n              .catch(err => {\n                console.log(err);\n\n              })\n          \n        }\n\n\n        for (let i = listasBlockchain.length; i > 0; i--) {\n          listasBlockchain.pop();\n        }\n      } else {\n\n        for (let i = listasBlockchain.length; i > 0; i--) {\n          listasBlockchain.pop();\n        }\n      }\n    }\n    )\n\n\n\n\n\n  }\n\n  //if (lists.length === 0) return <h1>Loading</h1>\n  if (elections.length === 0) return <h1>Loading</h1>\n\n  if (idEleccion === '') {\n    setIdEleccion(elections[0].id)\n  }\n\n  if (idEleccion === '') return <h1>Loading</h1>\n\n\n\n\n  return (\n\n\n    <div >\n\n\n      <br />\n      <h2 className=\"titulos\">Listas</h2>\n      <ToastContainer></ToastContainer>\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Elecciones</label>\n\n          <select className=\"form-control\"\n            name=\"idEleccion\"\n            value={idEleccion}\n\n            onChange={handleInputChange}>\n\n            {\n\n              elections.map(election => (\n                <option key={election.id} value={election.id} >{election.nombre}</option>\n              ))\n            }\n\n\n          </select>\n\n        </div>\n\n      </form>\n\n\n     \n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n\n\n      <br />\n      <br />\n      <div className=\"form-screen \">\n        <table className=\"table \">\n          <thead>\n            <tr>\n             \n              <th>Lista</th>\n              <th>Nombre</th>\n              <th>Descripcion</th>\n\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n\n              lists.map((lista) => {\n                return (\n\n                  <tr key={lista.id} >\n\n                    {lista.eleccion._id && lista.eleccion._id.search(idEleccion) ? '' :\n                      <> \n                        <td>\n                          {\n                            (lista.img)\n                            && (\n\n                              <div >\n                                <img className='userListImg'\n                                  src={lista.img}\n                                  alt=\"\"\n                                />\n                              </div>\n                            )}\n                        </td>\n                        <td>{lista.nombre}</td>\n                        <td>{lista.descripcion}</td>\n\n\n                        <td>\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={() => onSelectElection(lista)}\n\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </button>\n                          {\"   \"}\n                          <button\n                            className=\"btn btn-danger\"\n                            onClick={() => onDeletElection(lista)}\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </td>\n                      </>}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n\n      \n         \n          <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-success fab-danger\" onClick={agregarListas}>Agregar a Blockchain</button>\n       \n      <ListaModal idEleccion={idEleccion} />\n\n\n\n    </div>\n  );\n}\n","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\n\n\nexport const candidatoStartAddNew = ( candidato ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('candidatos', candidato, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                candidato.id = body.candidato.id;\n                candidato.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( candidato );\n                dispatch( candidatoAddNew( candidato ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst candidatoAddNew = (candidato) => ({\n    type: types.candidatoAddNew,\n    payload: candidato\n});\n\nexport const candidatoSetActive = (candidato) => ({\n    type: types.candidatoSetActive,\n    payload: candidato\n});\n\nexport const candidatoClearActiveCandidato = () => ({ type: types.candidatoClearActiveCandidato });\n\n\n\nexport const candidatoStartUpdate = ( candidato ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`candidatos/${ candidato.id }`, candidato, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( candidatoUpdated( candidato ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst candidatoUpdated = ( event ) => ({\n    type: types.candidatoUpdated,\n    payload: event\n});\n\n\nexport const candidatoStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().candidato.activeCandidato;\n        try {\n            const resp = await fetchConToken(`candidatos/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( candidatoDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst candidatoDeleted = () => ({ type: types.candidatoDeleted });\n\n\nexport const candidatoStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'candidatos' );\n            const body = await resp.json();\n            \n            dispatch( candidatoLoaded( body.candidatos ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst candidatoLoaded = (candidato) => ({\n    type: types.candidatoLoaded,\n    payload: candidato\n})\n\nexport const candidatoLogout =() => ({ type: types.candidatoLogout });","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { listaStartLoading } from '../../actions/lists';\nimport { candidatoClearActiveCandidato, candidatoStartAddNew, candidatoStartLoading, candidatoStartUpdate } from '../../actions/candidates';\nimport Swal from 'sweetalert2';\nimport { fileUpload } from '../../helpers/fileUpload';\n\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst initEvent = {\n    nombre: '',\n    apellido: '',\n    cargo: '',\n    lista: '',\n    img: ''\n}\n\n\nexport const CandidatoModal = ({ idLista }) => {\n\n\n    //const [isOpen, setIsOpen] = useState(true); // abrir y cerrar el formulario\n    // toma los valores del state ui\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch(); //modifica el estado de las funciones\n    const { activeCandidato } = useSelector(state => state.candidato);\n    const [lists] = useSelector(state => [state.lista.lista]);\n\n    // const [lists] = useSelector(state => [state.lista.lista]);\n\n    useEffect(() => {\n\n        dispatch(listaStartLoading());\n\n    }, [dispatch])\n\n\n    //const [dateStart, setDateStart] = useState(now.toDate()); //estado de las fechas del form\n    //const [dateEnd, setDateEnd] = useState(nowPlus1.toDate()); //estdo fin de la fecha del form\n\n    const [formValues, setFormValues] = useState(initEvent);\n    const { nombre, apellido, cargo, lista, img } = formValues;\n\n    //estados para validaciones+\n    const [titleValid, setTitleValid] = useState(true);\n\n    useEffect(() => {\n        if (activeCandidato) {\n            setFormValues(activeCandidato);\n            //console.log('complet stado')\n        } else {\n            setFormValues(initEvent);\n            //console.log('borrando stado')\n        }\n    }, [activeCandidato, setFormValues])\n\n    //console.log(activeElection)\n\n\n\n    const closeModal = (e) => {\n        //setIsOpen(false);\n        dispatch(uiCloseModal());\n        dispatch(candidatoClearActiveCandidato);\n        //dispatch(candidatoStartLoading());\n        setFormValues(initEvent); //se cierra el modal y los valores se borran\n\n    }\n\n\n\n    //con el valor de los inputs por medio del name, agrega al state del formValues\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    //tomar todos los valores del formulario al dar al boton guardar\n    const handleSubmitForm = (e) => {\n\n\n        const nuevo = {\n            ...formValues, lista:\n                idLista, cargo: formValues.cargo === '' ?\n                    \"Presidente\"\n                    : formValues.cargo\n        }\n\n\n        e.preventDefault();\n        //console.log(nuevo, 'como envia el candidato')\n        //console.log(formValues, 'enviados desde el form')\n\n        //validaciones\n\n\n        if (nombre.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeCandidato) {\n            dispatch(candidatoStartUpdate(formValues))\n        } else {\n            dispatch(candidatoStartAddNew(nuevo));\n        }\n\n\n        setTitleValid(true);\n        dispatch(candidatoStartLoading());\n        closeModal();\n\n    }\n\n    const startUploading = (file) => {\n        return async () => {\n\n            console.log(file);\n\n            Swal.fire({\n                title: 'Uploading...',\n                text: 'Please wait...',\n                allowOutsideClick: false,\n                onBeforeOpen: () => {\n                    Swal.showLoading();\n                }\n            });\n\n            const fileUrl = await fileUpload(file);\n            console.log(fileUrl)\n            setFormValues({ ...formValues, img: fileUrl })\n\n            Swal.close();\n\n        }\n    }\n    //toma los valores del archivo seleccionado\n    const handleFileChange = (e) => {\n        console.log(e.target.files);\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file));\n        }\n\n        console.log(img, 'haber q esta en el state')\n\n\n    }\n\n\n    if (lists.length === 0) return <h1>Loading</h1>\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n\n            <h1> {(activeCandidato) ? 'Editar candidato' : 'Nuevo candidato'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <input\n                        //id=\"fileSelector\"\n                        type=\"file\"\n                        name=\"file\"\n                        // style={{ display: 'none' }}\n                        onChange={handleFileChange}\n                    />\n\n\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Imagen de la lista</small>\n                </div>\n\n                {\n                    (img)\n                    && (\n\n                        <div className=\"notes__image\">\n                            <img className='imgCentrar'\n                                src={img}\n                                alt=\"\"\n                            />\n                        </div>\n                    )}\n                {/* <div className=\"form-group\">\n                    <select className=\"form-control\"\n                        name=\"lista\"\n                        value={lista}\n                        onChange={handleInputChange}>\n\n                        {\n                            lists.map(lista => (\n                                <option key={lista.id} value={lista.id} > {lista.nombre} </option>\n                            ))\n                        }\n\n                    </select>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Listas de las elecciones</small>\n                </div> */}\n\n                <div className=\"form-group\">\n                    <label>Nombre</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Nombre del candidato\"\n                        name=\"nombre\"\n                        autoComplete=\"off\"\n                        value={nombre}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Apellido\"\n                        name=\"apellido\"\n                        autoComplete=\"off\"\n                        value={apellido}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <select className=\"form-control\"\n                        name=\"cargo\"\n                        value={cargo}\n                        onChange={handleInputChange}>\n\n                        <option value=\"Presidente\"> Presidente</option>\n                        <option value=\"Vicepresidente\">Vicepresidente</option>\n                        <option value=\"Secretario\">Secretario</option>\n                        <option value=\"Tesorero\">Tesorero</option>\n\n                    </select>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Cargo del candidato</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { candidatoSetActive, candidatoStartDelete, candidatoStartLoading } from '../../actions/candidates';\nimport { CandidatoModal } from './CandidatoModal';\nimport Swal from 'sweetalert2';\nimport { listaStartLoading } from '../../actions/lists';\nimport { useState } from 'react';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CargoScreen } from '../cargos/CargoScreen';\nimport { CargoModal } from '../cargos/CargoModal';\n\n\nexport const CandidatoScreen = () => {\n\n\n  const [candidatos] = useSelector(state => [state.candidato.candidatos]);\n\n\n  const [lists] = useSelector(state => [state.lista.lista]);\n  //testeando listas\n  const [idLista, setIdLista] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    dispatch(listaStartLoading());\n\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(candidatoStartLoading());\n\n  }, [dispatch, idLista])\n\n\n  const handleInputChange = ({ target }) => {\n    const selectedLista = target.value;\n    setIdLista(selectedLista);\n    //console.log(idLista, 'esto viene select ')\n  }\n\n  const handleSubmitForm = (e) => {\n\n\n\n    setIdLista(e.target.value)\n\n\n\n    e.preventDefault();\n\n    //console.log(idLista, 'enviados desde el form')\n\n\n  }\n\n\n  //console.log(elections, \"si llega estos datos\");\n\n\n\n\n  useEffect(() => {\n\n    dispatch(candidatoStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n\n    dispatch(uiOpenModal());\n\n  }\n\n  const onSelectElection = (e) => {\n    dispatch(candidatoSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletElection = (e) => {\n    dispatch(candidatoSetActive(e));\n    Swal.fire({\n      title: \"Are you sure about deleting this candidate?\",\n      type: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete It\",\n      confirmButtonColor: \"#ff0055\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n      focusConfirm: false,\n      focusCancel: true\n    }).then(resultado => {\n      if (resultado.value) {\n        dispatch(candidatoStartDelete());\n\n      } else {\n\n      }\n\n    }\n    )\n\n\n  }\n\n  //if (candidatos.length === 0) return <h1>Loading</h1>\n  if (lists.length === 0) return <h1>Loading</h1>\n  if (idLista === '') {\n    setIdLista(lists[0].id)\n  }\n\n  if (idLista === '') return <h1>Loading</h1>\n\n\n\n  return (\n    <div>\n      <br />\n      <h2 className=\"titulos\">Candidatos</h2>\n      <ToastContainer></ToastContainer>\n\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Listas</label>\n\n          <select className=\"form-control\"\n            name=\"idLista\"\n            value={idLista}\n\n            onChange={handleInputChange}>\n\n            {\n\n              lists.map(list => (\n                <option key={list.id} value={list.id} >{list.nombre}</option>\n              ))\n            }\n\n\n          </select>\n\n        </div>\n\n\n      </form>\n\n      {/* <CargoScreen/> */}\n      <button\n        className=\"btn btn-success fab\" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n\n      <br />\n      <div className=\"form-screen\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Candidato</th>\n              <th>Nombre</th>\n              <th>Apellido</th>\n              <th>Cargo</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n\n              candidatos.map((candidate) => {\n                return (\n                  <tr key={candidate.id}>\n                    {candidate.lista._id && candidate.lista._id.search(idLista) ? '' :\n                      <> \n                        <td>\n                          {\n                            (candidate.img)\n                            && (\n                              <div >\n                                <img className='userListImg'\n                                  src={candidate.img}\n                                  alt=\"\"\n                                />\n                              </div>\n                            )}\n                        </td>\n                        <td>{candidate.nombre}</td>\n                        <td>{candidate.apellido}</td>\n                        <td>{candidate.cargo}</td>\n\n\n\n                        <td>\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={() => onSelectElection(candidate)}\n\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </button>\n                          {\"   \"}\n                          <button\n                            className=\"btn btn-danger\"\n                            onClick={() => onDeletElection(candidate)}\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </td>\n                      </>}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n      <CandidatoModal idLista={idLista} />\n     \n\n\n\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, NavLink} from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\n\n\nexport const NavAdmin = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n\n    const handleLogout = () => {\n        //history.replace('/login');\n        dispatch( startLogout() );\n    }\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n               Vote\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/elecciones\"\n                    >\n                        Elecciones\n                    </NavLink>\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/listas\"\n                    >\n                        Listas\n                    </NavLink>\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/candidatos\"\n                    >\n                        Candidatos\n                    </NavLink>\n\n                    <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/usuarios\"\n                    >\n                        Usuarios\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                <NavLink \n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\n                        to=\"/resultados\"\n                    >\n                        Resultados\n                    </NavLink>\n                    <span className=\"nav-item nav-link text-info\">\n                        { name }\n                    </span>\n                    \n                    <button \n                        className=\"nav-item nav-link btn\" \n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\n\n\nexport const userStartAddNew = ( user ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n     \n            const resp = await fetchConToken('auth/new', user, 'POST');\n            const body = await resp.json();\n\n            console.log(body, 'asi lega el body de usuarios')\n\n            if ( body.ok ) {\n                user._id = body.uid;\n                user.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( user );\n                dispatch( userAddNew( user ) );\n            }else{\n                //Swal.fire('Error', body.msg, 'error');\n               \n                Swal.fire('Error', body.errors?.cedula?.msg ||\n                 body.errors?.correo?.msg \n                 || body.errors?.password?.msg \n                 || body.msg , 'error');\n\n            }\n\n\n    }\n}\n\n\n\nconst userAddNew = (user) => ({\n    type: types.userAddNew,\n    payload: user\n});\n\nexport const userSetActive = (user) => ({\n    type: types.userSetActive,\n    payload: user\n});\n\nexport const userClearActiveUser = () => ({ type: types.userClearActiveUser });\n\n\n\nexport const userStartUpdate = ( user ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`auth/${ user._id }`, user, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( userUpdated( user ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst userUpdated = ( user ) => ({\n    type: types.userUpdated,\n    payload: user\n});\n\n\nexport const userStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { _id } = getState().user.activeUser;\n        try {\n            const resp = await fetchConToken(`auth/${ _id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( userDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst userDeleted = () => ({ type: types.userDeleted });\n\n\nexport const userStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'auth' );\n            const body = await resp.json();\n            \n            dispatch( userLoaded( body.usuarios ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst userLoaded = (user) => ({\n    type: types.userLoaded,\n    payload: user\n})\n\nexport const userLogout =() => ({ type: types.userLogout });","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport {  electionStartAddNew, electionStartUpdated } from '../../actions/elections';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { userClearActiveUser, userStartAddNew, userStartUpdate } from '../../actions/users';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst { verificarCedula } = require('udv-ec');\nvar validator = require(\"email-validator\");\n\n\n\n\n\n\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\nconst initEvent = {\n  cedula: '',\n  nombre: '',\n  correo: '',\n  password: '',\n  rol: \"\"\n}\n\n\nexport const UserModal = () => {\n\n\n  //const [isOpen, setIsOpen] = useState(true); // abrir y cerrar el formulario\n  // toma los valores del state ui\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeUser } = useSelector(state => state.user);\n\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { cedula, nombre, correo, password, rol } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n  const [cedulaValid, setCedulaValid] = useState(true);\n  const [correoValid, setCorreoValid] = useState(true);\n\n  // const handleSubmitRegister = (e) => {\n  // \te.preventDefault();\n  // \tconsole.log(valuesRegister);\n\n  // \tdispatch(startRegister(Rcedula, Rnombre, Rcorreo, Rpassword))\n\n  // \tif (Rpassword !== Rpassword2) {\n  // \t\treturn Swal.fire('Error', 'las contrase√±as deben ser iguales', 'error')\n  // \t}\n  // \t//dispatch( startLogin(correo, password));\n  // }\n\n\n  useEffect(() => {\n    if (activeUser) {\n      setFormValues(activeUser);\n      //console.log('complet stado')\n    } else {\n      setFormValues(initEvent);\n      //console.log('borrando stado')\n    }\n  }, [activeUser, setFormValues])\n\n  //console.log(activeElection)\n\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(userClearActiveUser());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n\n    const nuevo= {...formValues, rol: formValues.rol===''?\n        \"USER_ROLE\"\n       :formValues.rol}\n    \n    e.preventDefault();\n\n\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if(verificarCedula(cedula)=== false){\n      toast.error('Cedula invalida', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n    });\n      return setCedulaValid(false);\n    }\n\n    if(validator.validate(correo)===false){\n      toast.error('Correo invalido', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n    });\n      return setCorreoValid(false);\n    }\n\n    if (activeUser) {\n      dispatch(userStartUpdate(formValues))\n    } else {\n      dispatch(userStartAddNew(nuevo));\n    }\n\n\n    setTitleValid(true);\n    setCedulaValid(true);\n    setCorreoValid(true);\n    closeModal();\n\n  }\n\n  return (\n    \n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n  \n      <h1> {(activeUser) ? 'Editar usuario' : 'Nuevo usuario'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre \"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Cedula</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!cedulaValid && 'is-invalid'} `}\n            placeholder=\"cedula\"\n            name=\"cedula\"\n            autoComplete=\"off\"\n            value={cedula}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Correo</label>\n          <input\n            type=\"text\"\n            className={\"form-control\"}\n            placeholder=\"correo\"\n            name=\"correo\"\n            autoComplete=\"off\"\n            value={correo}\n            onChange={handleInputChange}\n          />\n        </div>\n\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Contrase√±a</label>\n          <input\n            type=\"password\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"******\"\n            name=\"password\"\n            autoComplete=\"off\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <select className=\"form-control\"\n            name=\"rol\"\n            value={rol}\n            onChange={handleInputChange}>\n            <option value=\"USER_ROLE\">Elector</option>\n            <option value=\"ADMIN_ROLE\">Administrador</option>\n          </select>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Rol de Usuario</small>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport Swal from 'sweetalert2';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { userSetActive, userStartDelete, userStartLoading } from '../../actions/users';\nimport { UserModal } from './UserModal';\n\n\n\n\n\nexport const UserScreen = () => {\n\n\n  const [users] = useSelector(state => [state.user.usuarios]);\n\n  //para controlar si tiene listas cada eleccion \n\n  //console.log(elections, \"si llega estos datos\");\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(userStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n    dispatch(uiOpenModal());\n  }\n\n  const onSelectUser = (e) => {\n    dispatch(userSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletUser = (e) => {\n    dispatch(userSetActive(e));\n\n    \n\n    Swal.fire({\n      title: \"Are you sure about deleting this user?\",\n      type: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete It\",\n      confirmButtonColor: \"#ff0055\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n      focusConfirm: false,\n      focusCancel: true\n    }).then(resultado => {\n      if (resultado.value) {\n          dispatch(userStartDelete());\n      } else {\n\n      }\n\n    }\n    )\n\n  }\n\n // console.log('llega a elecc');\n  return (\n\n\n\n    <div >\n      <br />\n      <h2 className=\"titulos\">Usuarios</h2>\n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n      <br />\n      <ToastContainer></ToastContainer>\n      <div className=\"form-screen \">\n        <table className=\"table \">\n          <thead>\n            <tr>\n         \n              <th>Nombre</th>\n              <th>Cedula</th>\n              <th>Correo</th>\n              <th>Rol</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              users.map((usuario) => {\n                return (\n                  <tr key={usuario._id}>\n                   \n                    <td>{usuario.nombre}</td>\n                    <td>{usuario.cedula}</td>\n                    <td>{usuario.correo}</td>\n                    <td>{usuario.rol}</td>\n                 \n                    <td>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => onSelectUser(usuario)}\n\n                      >\n                        <i className=\"fas fa-edit\"></i>\n                      </button>\n                      {\"   \"}\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => onDeletUser(usuario)}\n                      >\n                        <i className=\"fas fa-trash-alt\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n\n      <UserModal/>\n\n\n\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Chart, Doughnut } from 'react-chartjs-2';\nimport { getStats, getWinner, init } from '../../helpers/getWeb3Vote';\nimport { ToastContainer } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { electionStartLoading } from '../../actions/elections';\nimport moment from 'moment';\nimport { userStartLoading } from '../../actions/users';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\nconst total_votantes = 5;\n\n\nconst dataset = {\n  label: 'Porcentaje %',\n  data: [],\n  backgroundColor: [\n    'rgba(255, 99, 132, 0.2)',\n    'rgba(54, 162, 235, 0.2)',\n    'rgba(255, 206, 86, 0.2)',\n    'rgba(75, 192, 192, 0.2)',\n    'rgba(153, 102, 255, 0.2)',\n    'rgba(255, 159, 64, 0.2)',\n  ],\n  borderColor: [\n    'rgba(255, 99, 132, 1)',\n    'rgba(54, 162, 235, 1)',\n    'rgba(255, 206, 86, 1)',\n    'rgba(75, 192, 192, 1)',\n    'rgba(153, 102, 255, 1)',\n    'rgba(255, 159, 64, 1)',\n  ],\n  borderWidth: 2,\n\n\n\n};\n\n\n\n//fecha actual\n//const momentEnd = moment(end);\n\nconst seconds = 120\nexport const ResultsScreen = () => {\n\n  const [winner, setWinner] = useState('')\n  const [stats, setStats] = useState()\n  const [proposals, setProposals] = useState([])\n  const [totalVotes, setTotalVotes] = useState(0)\n\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n  const [users] = useSelector(state => [state.user.usuarios]);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(userStartLoading());\n\n  }, [dispatch])\n\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n\n\n\n\n  //iniciar blockchain\n  useEffect(() => {\n    init();\n    getStatsF()\n    setInterval(() => {\n      getStatsF()\n    }, (seconds * 1000)); // sec * millsecs\n  }, [])\n\n\n  const getStatsF = () => {\n    getStats()\n      .then(tx => {\n        const labels = tx.map(vote => vote[0])\n        setProposals(labels)\n       \n        let porc = (100 /totalVotantes());\n        const data = tx.map(vote => (Number(vote[1]) * porc))\n        const datasets = [{\n          ...dataset,\n          data\n        }]\n        const statsData = {\n          labels,\n          datasets\n        }\n        setStats(statsData)\n        const data2 = tx.map(vote => Number(vote[1]));\n        const total = data2.reduce((acc, item) => acc + item)\n        setTotalVotes(total)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const getWinnerF = () => {\n    getWinner()\n      .then(tx => {\n        setWinner(tx)\n      })\n      .catch(err => console.log(err))\n  };\n\n  const totalVotantes = () => {\n\n    let cont = 0;\n    for (let i = 0; i < users.length; i++) {\n\n      if (users[i].rol === \"USER_ROLE\") {\n        cont++;\n      }\n    }\n   \n    console.log('num de votantes', cont);\n    return cont;\n  }\n\n  const obtenerListas = () => {\n\n    getStats()\n      .then(tx => {\n        console.log(tx);\n        console.log(tx.length, 'este tama√±o tiene en blockchain');\n        //setproposal(tx)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const percent = () => {\n\n    const val = ((totalVotes * 100) / totalVotantes()).toFixed(2)\n    return `${val}%`\n\n  }\n  // const percent = () => {\n  //   const val = ((totalVotes * 100) / total_votantes).toFixed(2)\n  //   return `${val}%`\n  // }\n  if (totalVotantes() === 0) return <h1>No hay votantes</h1>\n  if (elections.length === 0) return <h1>Loading</h1>\n  if (users.length === 0) return <h1>Loading</h1>\n\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart',\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.dataset[tooltipItem.datasetIndex];\n            var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {\n              return previousValue + currentValue;\n            });\n            var currentValue = dataset.data[tooltipItem.index];\n            var percentage = Math.floor(((currentValue / total) * 100) + 0.5);\n            return percentage + \"%\";\n          }\n        }\n      },\n     \n    },\n  };\n\n\n  //obtener datos del estado global de eleccion activa\n  const end = moment(elections[0].end);\n\n  //console.log(start,'fecha de start');\n  //console.log(end,'fecha de emd');\n\n  const now = moment().seconds(0).add(0, 'hours'); // 3:00:00\n  //const nowPlus1 = now.clone().add(1, 'hours');\n  const fechaActual = now;\n\n  console.log(stats, 'final data')\n \n  \n  return <div>\n\n\n\n    <h2 className=\"titulos\"> Resultados de la Eleccion</h2>\n    <hr />\n\n    {(fechaActual > end) ?\n\n      <div>\n        <ToastContainer />\n        <div>\n          {\n            stats &&\n            <Bar options={options} data={stats}\n            className='categoriesDiv'\n\n            />\n          }\n          {\n            totalVotes && totalVotantes() &&\n            <>\n              <p>Votos: {totalVotes}/{totalVotantes()}</p>\n              <div className=\"progress my-2\" style={{ height: 30 }}>\n                <div className=\"progress-bar\" role=\"progressbar\" style={{ width: percent() }} aria-valuenow={totalVotes} aria-valuemin=\"0\" aria-valuemax={total_votantes}>{percent()}</div>\n              </div>\n            </>\n          }\n          {\n            winner &&\n            <p className='my-2'>Actual winner: {winner}</p>\n          }\n\n\n        </div>\n\n        <div className='d-flex justify-content-between my-2'>\n          <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-primary\" onClick={getWinnerF}>get winner</button>\n          <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-primary\" onClick={getStatsF}>get stats</button>\n          <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-primary\" onClick={obtenerListas}>blockchain</button>\n        </div>\n\n\n      </div>\n\n\n      :\n      <div className=\"titulos\">\n        <h1>Eleccion en proceso</h1>\n        <h2>Fecha de Resultados: {moment(end).format('YYYY-MM-DD HH:mm:ss')}</h2>\n      </div>\n    }\n\n  </div>\n\n};\n","import React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\n\nimport { EleccionScreen } from '../components/elecciones/EleccionScreen';\nimport { ListaScreen } from '../components/listas/ListaScreen';\nimport { CandidatoScreen } from '../components/candidatos/CandidatoScreen';\nimport { NavAdmin } from '../components/ui/NavAdmin';\nimport { UserScreen } from '../components/user/UserScreen';\nimport { ResultsScreen } from '../components/vote/ResultsScreen';\n\n\n\nexport const DashboardRoutes = () => {\n\n   \n \n    return (\n        <>\n            <NavAdmin/>\n\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"elecciones\" element={<EleccionScreen/>}/>\n                    <Route path=\"listas\" element={<ListaScreen/>}/>\n\n                    <Route path=\"candidatos\" element={<CandidatoScreen/>}/>\n                    <Route path=\"usuarios\" element={<UserScreen/>}/>\n                    <Route path=\"resultados\" element={<ResultsScreen/>}/>\n\n                    <Route path=\"/\" element={<EleccionScreen/>}/>\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { candidatoStartLoading } from '../../actions/candidates';\nimport { listaStartLoading } from '../../actions/lists';\n\nimport { init, vote } from '../../helpers/getWeb3Vote';\n\n\nimport Swal from 'sweetalert2';\nimport { electionStartLoading } from '../../actions/elections';\nimport moment from 'moment';\n\n\n\n// const initialState = [\n//   'Proposal 1', 'Proposal 2', 'Proposal 3'\n// ]\n\nexport const VoteScreen = () => {\n\n\n  const [lists] = useSelector(state => [state.lista.lista]);\n  const [cedula] = useSelector(state => [state.auth.cedula]);\n  const dispatch = useDispatch();\n\n\n  const initialState = {}\n  const [state, setState] = useState(initialState);\n\n\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n  //testeando listas de elecciones de\n  const [tests] = useSelector(state => [state.eleccion.election]);\n  // const { election: elections } = useSelector(state => state.eleccion);\n\n\n  //console.log(tests[0].lists, 'eso deberian ser las listas')\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n\n\n\n  useEffect(() => {\n    init();\n  }, [])\n\n  useEffect(() => {\n\n  }, [state])\n\n  let nuevo = [];\n  const listasEleccion = () => {\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].eleccion._id === (elections[0].id)) {\n        nuevo.push(lists[i])\n      }\n\n    }\n\n    let votoBlanco = {\n      id: \"231442\",\n      nombre: \"Voto Blanco\",\n      img: \"https://res.cloudinary.com/universidad-tecnica-del-norte/image/upload/v1645414706/vote/arton27355_fh7pev.jpg\",\n      descripcion: \" \",\n      candidates: []\n    }\n\n    let votoNulo = {\n      id: \"23146\",\n      nombre: \"Voto Nulo\",\n      img: \"https://res.cloudinary.com/universidad-tecnica-del-norte/image/upload/v1645414706/vote/1-72_t6qtfg.jpg\",\n      descripcion: \" \",\n      candidates: []\n    }\n    if (nuevo.length > 0) {\n      nuevo.push(votoBlanco)\n      nuevo.push(votoNulo)\n\n    }\n    console.log(nuevo, 'nueva lista con voto blanco')\n  }\n\n\n\n\n  const onSelectElection = (e) => {\n\n    \n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n\n    const init = {\n      ...state,\n      proposal: e,\n      ci: cedula\n\n    }\n    setState(init)\n\n    if (init.ci) {\n      vote(init)\n        .then(tx => {\n          Swal.close();\n          Swal.fire(\"Enviado\", \"Voto generado con exito!\", \"success\");\n          setState(initialState)\n        })\n        .catch(err => {\n          console.log(err)\n          Swal.fire(\"Error\", \"Ya has votado!\", \"error\");\n        })\n    }\n\n\n  }\n\n\n  useEffect(() => {\n    dispatch(listaStartLoading());\n\n  }, [dispatch]);\n\n\n  const [candidatos] = useSelector(state => [state.candidato.candidatos]);\n\n  useEffect(() => {\n    dispatch(candidatoStartLoading());\n  }, [dispatch])\n\n\n  if (elections.length === 0) return <h2>No hay elecciones disponibles</h2>\n\n  // agregar un esatdo global y obtener datos de la eleccion activa\n  const start = moment(elections[0].start);\n  const end = moment(elections[0].end);\n\n  const now = moment().seconds(0).add(0, 'hours'); // 3:00:00\n  const fechaActual = now;\n\n  //console.log(fechaActual,'fecha actual');\n\n  if (elections.length > 0 && lists.length > 0) {\n    listasEleccion();\n  }\n\n  if (nuevo.length === 0) return <h2>No hay listas</h2>\n  return (\n\n\n    <div>\n\n      <br />\n\n\n      <h2 className=\"titulos\">Listas</h2>\n\n      {(fechaActual.isSameOrAfter(start) && fechaActual < end) ? <div>\n        <br />\n        <div className=\"form-screen \">\n          <table className=\"table \">\n            <thead>\n              <tr>\n\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Imagen</th>\n                <th>Candidatos</th>\n                <th>Votar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                nuevo.map((lista, index) => {\n                  return (\n                    <tr key={lista.id} >\n\n                      <td>{lista.nombre}</td>\n                      <td>{lista.descripcion}</td>\n\n                      <td>\n                        {\n                          (lista.img)\n                          && (\n\n                            <div className=\"votes__image\">\n                              <img className='imgCentrar'\n                                src={lista.img}\n                                alt=\"\"\n                              />\n                            </div>\n                          )}\n                      </td>\n\n                      <td>{candidatos.map((candidate) => {\n                        // return <td> {candidate.lista._id.search(lista.id) ? candidate.nombre :'no hay candidatos'} </td>\n                        return <p key={candidate.id}> {lista.id?.search(candidate.lista?._id) ? '' : `${candidate.nombre}: ${candidate.cargo} `} </p>\n\n                      })}</td>\n\n                      <td>\n                        <button\n                          className=\"btn btn-primary\"\n                          onClick={() => onSelectElection(index)}\n\n                        >\n                          <i className=\"fas fa-vote-yea\"></i>\n                        </button>\n\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n\n\n\n      </div>\n        :\n        <div>\n\n          <h1>Eleccion Inactiva</h1>\n          <h2>Fecha de inicio: {moment(start).format('YYYY-MM-DD HH:mm:ss')}</h2>\n          <h2>Fecha de fin: {moment(end).format('YYYY-MM-DD HH:mm:ss')}</h2>\n\n\n        </div>\n\n      }\n\n\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, NavLink} from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\n\n\nexport const NavUser = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n\n    const handleLogout = () => {\n        //history.replace('/login');\n        dispatch( startLogout() );\n    }\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Vote\n            </Link>\n\n            \n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span className=\"nav-item nav-link text-info\">\n                        { name }\n                    </span>\n                    \n                    <button \n                        className=\"nav-item nav-link btn\" \n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\n\n\nimport { VoteScreen } from '../components/vote/VoteScreen';\nimport { NavUser } from '../components/ui/NavUser';\n\n\n\nexport const DashboardUser = () => {\n    return (\n        <>\n            <NavUser />\n\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"votos\" element={<VoteScreen />} />\n\n                    <Route path=\"/\" element={<VoteScreen  />} />\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react';\n\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { useSelector } from 'react-redux';\nimport { DashboardUser } from './DashboardUser';\nimport { startChecking } from '../actions/auth';\nimport { useDispatch } from 'react-redux';\n\n\n\nexport const AppRouter = () => {\n\n   \n    const { auth} = useSelector( state => state);\n\n \n    return (\n        <BrowserRouter>\n          \n            <Routes>\n                <Route path=\"/login\" element={\n                    <PublicRoute>\n                        <LoginScreen/>\n                    </PublicRoute>\n                } \n                />\n                \n\n                <Route path=\"/*\" element={ \n                        <PrivateRoute>\n                            {(auth?.rol === \"ADMIN_ROLE\") ?\n                               <DashboardRoutes/>\n                               : <DashboardUser/>\n                        } \n                        </PrivateRoute>\n                    } \n                />\n\n            </Routes>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n    <CalendarApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}