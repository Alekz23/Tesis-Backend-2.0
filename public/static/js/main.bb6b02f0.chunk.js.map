{"version":3,"sources":["components/auth/styles/images/icons/favicon.ico","helpers/getWeb3Vote.js","types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/electionReducer.js","reducers/authReducer.js","reducers/listaReducer.js","reducers/candidatoReducer.js","reducers/userReducer.js","reducers/cargoReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareElections.js","actions/elections.js","actions/auth.js","components/auth/LoginScreen.js","hooks/useForm.js","components/ui/NavPublic.js","actions/users.js","components/vote/ResultsScreen.js","router/DashboardPublic.js","router/PrivateRoute.js","router/PublicRoute.js","actions/ui.js","components/elecciones/EleccionModal.js","components/elecciones/EleccionScreen.js","helpers/fileUpload.js","actions/lists.js","components/listas/ListaModal.js","components/listas/ListaScreen.js","actions/candidates.js","actions/cargos.js","components/candidatos/CandidatoModal.js","components/cargos/CargoModal.js","components/cargos/CargoScreen.js","components/candidatos/CandidatoScreen.js","components/ui/NavAdmin.js","components/user/UserModal.js","components/user/UserScreen.js","router/DashboardRoutes.js","components/vote/VoteScreen.js","components/ui/NavUser.js","router/DashboardUser.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["module","exports","myContract","addressContract","types","initialState","modalOpen","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","election","activeElection","enableElection","checking","rol","cedula","lista","activeLista","candidatos","activeCandidato","usuarios","activeUser","cargos","activeCargo","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","eleccion","auth","candidato","cargo","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareElections","elections","electionAddNew","electionSetActive","electionUpdated","electionStartLoading","dispatch","a","resp","json","console","log","elecciones","electionLoaded","electionDeleted","checkingFinish","login","startLogout","clear","logout","LoginScreen","useState","values","setValues","reset","handleInputChange","target","value","useForm","valuesLogin","handleInputChangeLogin","correo","password","useDispatch","className","onSubmit","preventDefault","ok","setItem","uid","Swal","fire","msg","errors","startLogin","data-validate","onChange","src","NavPublic","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","isActive","Provider","require","address","isInit","init","provider","web3","Web3","eth","net","getId","networkId","Contract","voteContractBuild","abi","networks","vote","proposal","ci","methods","Number","send","from","then","AddListas","proposals","getWinner","winnerName","call","getStats","userStartAddNew","getState","userAddNew","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","userSetActive","userStartUpdate","userUpdated","userDeleted","userStartLoading","userLoaded","dataset","label","backgroundColor","borderColor","borderWidth","options","plugins","datalabels","formatter","listasJson","ResultsScreen","winner","setWinner","stats","setStats","totalVotes","setTotalVotes","tipoGrafico","setTipoGrafico","useSelector","users","useEffect","getStatsF","tx","i","length","voteCount","push","labels","porc","totalVotantes","datasets","total","reduce","acc","item","catch","err","cont","percent","val","toFixed","customizeText2","arg","num","valueText","Math","round","nameElection","nombre","fechaActual","seconds","key","palette","dataSource","orientation","itemTextPosition","horizontalAlignment","verticalAlignment","columnCount","enabled","argumentField","valueField","visible","customizeText","size","width","ignoreEmptyPoints","nameField","rotated","style","height","role","aria-valuenow","aria-valuemin","aria-valuemax","onClick","format","DashboardPublic","path","element","PrivateRoute","children","location","useLocation","pathname","PublicRoute","uiOpenModal","uiCloseModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","nowPlus1","clone","initEvent","descripcion","EleccionModal","formValues","setFormValues","titleValid","setTitleValid","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","trim","electionStartAddNew","minDate","placeholder","autoComplete","rows","EleccionScreen","onDeletElection","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","lists","dismiss","DismissReason","cancel","Table","fileUpload","file","formData","FormData","append","cloudResp","secure_url","listaStartAddNew","listaAddNew","listaSetActive","listaStartUpdated","listaUpdated","listaStartLoading","listaLoaded","listas","listaDeleted","img","ListaModal","idEleccion","nuevo","accept","files","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","alt","tamaño","ListaScreen","listasBlockchain","XL_row_object","setIdEleccion","obtenerListas","candidates","tamaño2","test","estado","voteBN","limpiarListas","pop","selectedElection","reader","FileReader","readAsArrayBuffer","onloadend","Uint8Array","workbook","XLSX","SheetNames","forEach","sheetName","sheet_to_row_object_array","Sheets","setTimeout","document","getElementById","search","index","imageUrl","imageWidth","imageHeight","imageAlt","cancelButtonText","reverseButtons","resultado","denyButton","candidatoAddNew","candidatoSetActive","candidatoClearActiveCandidato","candidatoUpdated","event","candidatoDeleted","candidatoStartLoading","candidatoLoaded","cargoStartAddNew","cargoAddNew","cargoDeleted","cargoStartLoading","cargoLoaded","apellido","CandidatoModal","idLista","candidatoStartAddNew","CargoModal","nameValid","setNameValid","CargoScreen","focusConfirm","focusCancel","addCargos","input","inputLabel","inputPlaceholder","success","CandidatoScreen","setIdLista","selectedLista","list","candidate","NavAdmin","navigate","useNavigate","replace","verificarCedula","validator","UserModal","cedulaValid","setCedulaValid","correoValid","setCorreoValid","validate","DataTable","UserScreen","onDeletUser","resetStatusVote","usuario","DashboardRoutes","VoteScreen","setState","onSelectElection","idUsuario","buscarUsuario","transactionHash","footer","elemento","href","listasEleccion","isSameOrAfter","scope","data-label","toUpperCase","NavUser","DashboardUser","AppRouter","CalendarApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.bb6b02f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","import Web3 from 'web3';\nimport voteContractBuild from '../build/contracts/Vote.json';\nconst Provider = require('@truffle/hdwallet-provider');\n\n//const address = '0xc01dda89e6151D19005c29DeEf364618273Ec148';\n//test BSC---------\nconst address = '0xc01dda89e6151D19005c29DeEf364618273Ec148';\n\n\n//const privateKey = '62e93d412b219ecb9afd757e99070d6d7bc2bd02de6a77c6450082e46c487c08';\n//test con la cuenta de BSC\nconst privateKey = '62e93d412b219ecb9afd757e99070d6d7bc2bd02de6a77c6450082e46c487c08';\n//const infuraUrl = 'https://rinkeby.infura.io/v3/02e6ba60363b49b7922a4f9ad1a87b4c';\n\n\nlet myContract\n\nlet isInit = false\n\n export let addressContract\n //let nonces\n\n\nexport const init = async () => {\n  //const provider = new Provider(privateKey, 'https://rinkeby.infura.io/v3/02e6ba60363b49b7922a4f9ad1a87b4c');\n  //test con BSC\n  const provider = new Provider(privateKey, 'https://data-seed-prebsc-1-s1.binance.org:8545');\n  // test con Polygon\n  //const provider = new Provider(privateKey, 'https://rpc-mumbai.maticvigil.com/v1/8d9378fdfa5c3bb88018bb2e1e9d958578dc98a8');\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId()\n  myContract = new web3.eth.Contract(\n    voteContractBuild.abi,\n    voteContractBuild.networks[networkId].address,\n   \n  );\n  console.log(myContract);\n // the destination address\n addressContract =   voteContractBuild.networks[networkId].address;\n\n //nonces = web3.eth.getTransactionCount(address);\n  // console.log(await myContract.methods.data().call());\n  // console.log(`Old data value: ${await myContract.methods.data().call()}`);\n  // const receipt = await myContract.methods.setData(3).send({ from: address });\n  // console.log(`Transaction hash: ${receipt.transactionHash}`);\n  // console.log(`New data value: ${await myContract.methods.data().call()}`);\n\n  isInit = true\n}\n\n\nexport const vote = async ({ proposal, ci }) => {\n  if (!isInit) await init()\n\n  // const tx = myContract.methods.vote(Number(proposal), Number(ci));\n  // const gas = 8500000;\n  // const gasPrice = 10000000000;\n  // const data = tx.encodeABI();\n  // const nonce = nonces\n  // const txData = {\n  //   from: address,\n  //   to: myContract.options.address,\n  //   data: data,\n  //   gas,\n  //   gasPrice,\n  //   nonce, \n  //   chainId: '80001', \n  //   hardfork: 'istanbul'\n  // };\n\n\n  //console.log('asi llegan los datos', txData)\n  //gas: 9500000 , gasPrice: 20000000000\n  return myContract\n    .methods\n    .vote(Number(proposal), Number(ci))\n    .send({ from: address })\n    .then(vote => vote,\n      );\n    \n    \n}\n\nexport const AddListas = async (proposals) => {\n  if (!isInit) await init()\n  console.log(proposals, 'esto llega en arrays para ya agregar a blockchain')\n  return myContract\n    .methods\n    .AddListas(proposals) // \n    //.AddListas(Array(proposals)) // \n    .send({ from: address})\n    .then(vote => vote);\n\n}\n\n\nexport const getWinner = async () => {\n  if (!isInit) await init()\n\n  return myContract\n    .methods\n    .winnerName()\n    .call()\n}\n\nexport const getStats = async () => {\n  if (!isInit) await init()\n\n  return myContract\n    .methods\n    .getStats()\n    .call()\n}\n\n","\nexport const types = {\n    //abrir y cerra el formulario model para ingresar datos\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    //elecciones estados \n    electionSetActive: '[election] Set Active',\n    electionStartAddNew: '[election] Start Add new',\n    electionAddNew: '[election] Add new',\n    electionClearActiveElection: '[election] Clear active election', //limpiar del store la eleccion activa\n    electionUpdated: '[election] Election updated', //actualizar eleccion\n    electionDeleted: '[election] Election deleted', // eliminar eleccion\n    electionLoaded: '[election] Election loaded',\n    electionLogout : '[election] Election logout',\n    electionLoadedByList: '[byId] Election loadedList',\n\n    electionEnabled: '[election] Enable Active', // habilitar eleccion global\n    electionClearEnable: '[election] Clear enable election', //limpiar del store la eleccion habilitada\n\n\n\n\n    //redux de listas------------------------------------------------\n    listaSetActive: '[lista] Set Active',\n    listaStartAddNew: '[lista] Start Add new',\n    listaAddNew: '[lista] Add new',\n    listaClearActiveElection: '[lista] Clear active lista', //limpiar del store la eleccion activa\n    listaUpdated: '[lista] Lista updated', //actualizar eleccion\n    listaDeleted: '[lista] Lista deleted', // eliminar eleccion\n    listaLoaded: '[lista]  Lista loaded',\n    listaLogout : '[lista] Lista logout',\n\n\n    //cargos redux\n      //redux de listas------------------------------------------------\n      cargoSetActive: '[cargo] Set Active',\n      cargoStartAddNew: '[cargo] Start Add new',\n      cargoAddNew: '[cargo] Add new',\n      cargoClearActiveCargo: '[cargo] Clear active cargo', //limpiar del store la eleccion activa\n      cargoDeleted: '[cargo deleted', // eliminar eleccion\n      cargoLoaded: '[cargo]  cargo loaded',\n      cargoLogout : '[cargo] cargo logout',\n  \n\n    //redux de candidatos ----------------\n\n     //elecciones estados \n     candidatoSetActive: '[candidato] Set Active',\n     candidatoStartAddNew: '[candidato] Start Add new',\n     candidatoAddNew: '[candidato] Add new',\n     candidatoClearActiveCandidato: '[candidato] Clear active Candidato', //limpiar del store la eleccion activa\n     candidatoUpdated: '[candidato] Candidato updated', //actualizar eleccion\n     candidatoDeleted: '[candidato] Candidato deleted', // eliminar eleccion\n     candidatoLoaded: '[candidato]  Candidato loaded',\n     candidatoLogout : '[candidato] Candidato logout',\n\n      //usuarios estados \n      userSetActive: '[user] Set Active',\n      userStartAddNew: '[user] Start Add new',\n      userAddNew: '[user] Add new',\n      userClearActiveUser: '[user] Clear active User', //limpiar del store la eleccion activa\n      userUpdated: '[user] User updated', //actualizar eleccion\n      userDeleted: '[user] User deleted', // eliminar eleccion\n      userLoaded: '[user]  User loaded',\n      userLogout : '[user] User logout',\n \n\n\n\n    \n    //esatdo para el login Authorization\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n//agrega lo que quiere hacer con las funciones en types\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'Cumpleaños del jefe',\n        start: moment().toDate(),\n        end: moment().add( 2, 'hours' ).toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: '123',\n            name: 'Fernando'\n        }\n    }],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","\n// election:[{\n//     id: new Date().getTime(),\n//     name: 'election 2021',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     description: 'elections students',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }]\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    election: [],\n    activeElection: null,\n    enableElection: null\n};\n\n\nexport const electionReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.electionSetActive:\n            return {\n                ...state,\n                activeElection: action.payload\n            }\n            //eleccion global habilitada \n            case types.electionEnabled:\n            return {\n                ...state,\n                enableElection: action.payload\n            }\n        \n        case types.electionAddNew:\n            return {\n                ...state,\n                election: [\n                    ...state.election,\n                    action.payload\n                ]\n            }\n    \n        case types.electionClearActiveElection:\n            return {\n                ...state,\n                activeElection: null\n            }\n\n            case types.electionClearEnable:\n                return {\n                    ...state,\n                    enableElection: null\n                }\n    \n\n        case types.electionUpdated:\n            return {\n                ...state,\n                election: state.election.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.electionDeleted:\n            return {\n                ...state,\n                election: state.election.filter(\n                    //e => ( e.id !== state.activeElection.id )\n                    e => ( e.id !== state.activeElection.id )\n                ),\n                activeElection: null\n            }\n\n            case types.electionLoaded:\n                return {\n                    ...state,\n                    election: [ ...action.payload ]\n                }\n\n            \n                \n                case types.electionLogout:\n                    return {\n                        ...initialState\n                    }\n        \n    \n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    rol: null,\n    // name: null\n    cedula:null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","\nimport { types } from '../types/types';\n\nconst initialState = {\n    lista: [],\n    activeLista: null\n};\n\n\nexport const listaReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.listaSetActive:\n            return {\n                ...state,\n                activeLista: action.payload\n            }\n\n        case types.listaAddNew:\n            return {\n                ...state,\n                lista: [\n                    ...state.lista,\n                    action.payload\n                ]\n            }\n\n        case types.listaClearActiveElection:\n            return {\n                ...state,\n                activeLista: null\n            }\n\n\n        case types.listaUpdated:\n            return {\n                ...state,\n                lista: state.lista.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.listaDeleted:\n            return {\n                ...state,\n                lista: state.lista.filter(\n                    //e => ( e.id !== state.activeElection.id )\n                    e => (e.id !== state.activeLista.id)\n                ),\n                activeLista: null\n            }\n\n        case types.listaLoaded:\n            return {\n                ...state,\n                lista: [...action.payload]\n            }\n\n        case types.listaLogout:\n            return {\n                ...initialState\n            }\n\n\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    candidatos: [],\n    activeCandidato: null\n};\n\n\nexport const candidatoReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.candidatoSetActive:\n            return {\n                ...state,\n                activeCandidato: action.payload\n            }\n        \n        case types.candidatoAddNew:\n            return {\n                ...state,\n                candidatos: [\n                    ...state.candidatos,\n                    action.payload\n                ]\n            }\n    \n        case types.candidatoClearActiveCandidato:\n            return {\n                ...state,\n                activeCandidato: null\n            }\n\n\n        case types.candidatoUpdated:\n            return {\n                ...state,\n                candidatos: state.candidatos.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.candidatoDeleted:\n            return {\n                ...state,\n                candidatos: state.candidatos.filter(\n                    e => ( e.id !== state.activeCandidato.id )\n                ),\n                activeCandidato: null\n            }\n\n        case types.candidatoLoaded:\n            return {\n                ...state,\n                candidatos: [ ...action.payload ]\n            }\n\n        case types.candidatoLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    usuarios: [],\n    activeUser: null\n};\n\n\nexport const userReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.userSetActive:\n            return {\n                ...state,\n                activeUser: action.payload\n            }\n        \n        case types.userAddNew:\n            return {\n                ...state,\n                usuarios: [\n                    ...state.usuarios,\n                    action.payload\n                ]\n            }\n    \n        case types.userClearActiveUser:\n            return {\n                ...state,\n                activeUser: null\n            }\n\n\n        case types.userUpdated:\n            return {\n                ...state,\n                usuarios: state.usuarios.map(\n                    e => ( e._id === action.payload._id ) ? action.payload : e\n                )\n            }\n        \n        case types.userDeleted:\n            return {\n                ...state,\n                usuarios: state.usuarios.filter(\n                    e => ( e._id !== state.activeUser._id )\n                ),\n                activeUser: null\n            }\n\n        case types.userLoaded:\n            return {\n                ...state,\n                usuarios: [ ...action.payload ]\n            }\n\n        case types.userLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    cargos: [],\r\n    activeCargo: null\r\n};\r\n\r\n\r\nexport const cargoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.cargoSetActive:\r\n            return {\r\n                ...state,\r\n                activeCargo: action.payload\r\n            }\r\n\r\n        case types.cargoAddNew:\r\n            return {\r\n                ...state,\r\n                cargos: [\r\n                    ...state.cargos,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.cargoClearActiveCargo:\r\n            return {\r\n                ...state,\r\n                activeCargo: null\r\n            }\r\n\r\n\r\n\r\n        case types.cargoDeleted:\r\n            return {\r\n                ...state,\r\n                cargos: state.cargos.filter(\r\n                    e => (e.id !== state.activeCargo.id)\r\n                ),\r\n                activeCargo: null\r\n            }\r\n\r\n        case types.cargoLoaded:\r\n            return {\r\n                ...state,\r\n                cargos: [...action.payload]\r\n            }\r\n\r\n        case types.cargoLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { electionReducer } from './electionReducer';\nimport { authReducer } from './authReducer';\nimport { listaReducer } from './listaReducer';\nimport { candidatoReducer } from './candidatoReducer';\nimport { userReducer } from './userReducer';\nimport { cargoReducer } from './cargoReducer';\n//import { electionByIdReducer } from './electionByIdReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    eleccion: electionReducer,\n    auth: authReducer,\n    lista: listaReducer,\n    candidato: candidatoReducer,\n    //byId: electionByIdReducer\n    user: userReducer,\n    cargo: cargoReducer,\n    // TODO: AuthReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\n\n\nexport const prepareElections = ( elections = [] ) => {\n\n    return elections.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n             start: moment( e.start ).toDate(),\n            //end:moment(e.end).format('YYYY-MM-DD HH:mm:ss'),\n            //start: moment(e.start).format('YYYY-MM-DD HH:mm:ss'),\n        })\n    );\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareElections } from \"../helpers/prepareElections\";\nimport { types } from \"../types/types\";\n\nexport const electionStartAddNew= (election) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('elecciones', election, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                election.id = body.eleccion.id; //id de la eleccion una vez en la bdd\n                election.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( election );\n                dispatch( electionAddNew( election ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n};\n\n\n//estas funciones se muestran en los screens para llamarlas y modificarlas\nconst electionAddNew = (election) => ({\n    type: types.electionAddNew,\n    payload: election\n});\n\nexport const electionSetActive = (election) => ({\n    type: types.electionSetActive,\n    payload: election\n});\n\nexport const electionClearActiveElection = () => ({\n    type: types.electionClearActiveElection\n});\n\nexport const  electionStartUpdated=(election)=>{\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`elecciones/${election.id}`, election, 'PUT');\n            const body = await resp.json();\n\n            console.log(election)\n\n            if ( body.ok ) {\n                dispatch(electionUpdated(election));\n                console.log('sie entra al update')\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n               \n            }\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n}\n\n\nconst electionUpdated = ( election ) => ({\n    type: types.electionUpdated,\n    payload: election\n});\n\n\n// export const electionStartLoadingByList = (election) => {\n//     return async(dispatch) => {\n\n//         try {\n            \n//             const resp = await fetchConToken(`elecciones/${election.idEleccion}`, 'GET');\n\n//             const body = await resp.json();\n//             console.log(body.elecciones.lists, 'lo q envia')\n           \n//             dispatch( electionLoadedByList( body.elecciones.lists ) );\n\n//         } catch (error) {\n//             console.log(error)\n//         }\n\n//     }\n// }\n\n// const electionLoadedByList = (elections) => ({\n//     type: types.electionLoadedByList,\n//     payload: elections\n// })\n\nexport const electionStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'elecciones' );\n            const body = await resp.json();\n            console.log(body)\n            const elections = prepareElections( body.elecciones );\n            dispatch( electionLoaded( elections ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst electionLoaded = (elections) => ({\n    type: types.electionLoaded,\n    payload: elections\n})\n\nexport const electionStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().eleccion.activeElection;\n        console.log(id)\n        try {\n            const resp = await fetchConToken(`elecciones/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( electionDeleted() );\n                console.log('entra a eliminar')\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\n const electionDeleted = () => ({ type: types.electionDeleted });\n\n export const electionLogout =() => ({ type: types.electionLogout });\n\n\n\n //metodo para obtener el estado global de la eleccion para obtener resultados/votaciones /addd usuarios\n //y buscar las elecciones conforme a la eleccion activacion\nexport const electionEnable = (election) => ({\n    type: types.electionEnabled,\n    payload: election\n});\n\nexport const electionClearEnable = () => ({\n    type: types.electionClearEnable\n});\n","import Swal from 'sweetalert2';\nimport { fetchSinToken,  fetchConToken} from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { electionLogout } from './elections';\n\nexport const startLogin=(correo, password) => {\n    return async(dispatch)=>{\n        const resp= await fetchSinToken('auth/login', {correo, password}, 'POST');\n        const body= await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n          //busca en la respuesat json del body si tiene objetos ir esacalando user.name o name\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n                cedula: body.cedula,\n                rol: body.rol,\n                \n                \n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            console.log(body.errors)\n        }\n        \n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await  fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        console.log(body,'renew');\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.nombre,\n                cedula: body.cedula,\n                rol: body.rol,\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\n\nexport const startRegister=(cedula, nombre, correo, password) => {\n    return async(dispatch)=>{\n        const resp= await fetchSinToken('auth/new', {cedula, nombre, correo, password, rol:\"ADMIN_ROLE\"}, 'POST');\n        const body= await resp.json();\n        console.log(body)\n        if( body.ok ) {\n            \n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n          \n            dispatch( login({\n                //busca en la respuesat json del body si tiene objetos ir esacalando user.name o name\n                uid: body.uid,\n                name: body.nombre,\n               \n                \n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            \n        }\n        \n\n    }\n}\n\n\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( electionLogout());\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startLogin} from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nimport './login.css';\n\nimport './styles/css/util.css';\nimport './styles/css/main.css';\nimport './styles/vendor/select2/select2.min.css';\nimport './styles/vendor/daterangepicker/daterangepicker.css';\nimport './styles/vendor/animsition/css/animsition.min.css';\nimport './styles/vendor/css-hamburgers/hamburgers.min.css';\nimport './styles/vendor/animate/animate.css';\nimport './styles/images/icons/favicon.ico';\n\nimport './styles/fonts/iconic/css/material-design-iconic-font.min.css';\nimport './styles/fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './styles/vendor/bootstrap/css/bootstrap.min.css';\n\n\n\n\n\n\nexport const LoginScreen = () => {\n\n\tconst [valuesLogin, handleInputChangeLogin] = useForm({\n\t\t\"correo\": \"alekz@gmail.com\",\n\t\t\"password\": \"123456\"\n\n\t})\n\tconst { correo, password } = valuesLogin;\n\n\n\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(valuesLogin)\n\t\tdispatch(startLogin(correo, password));\n\t}\n\n\t// const navigate = useNavigate();\n\n\t// const handleNavigate=()=>{\n\t// \tnavigate('/resultados',\n\t// \t{\n\t// \t\treplace: true\n\t// \t});\n\t// }\n\n\n\n\treturn <div className='fondo-login'>\n{/* <button className=\"btn btn-primary\" onClick={handleNavigate}> Resultados</button> */}\n\t\t<div className=\"fondo-login\">\n\t\t\t<div className=\"container-login100\">\n\t\t\n\n\t\t\t\t<div className=\"wrap-login100\">\n\t\t\t\t\n\t\t\t\t\t<form className=\"login100-form validate-form\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t<span className=\"login100-form-title p-b-26\">\n\t\t\t\t\t\tWelcome\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"login100-form-title p-b-48\">\n\t\t\t\t\t\t<i className=\"fa-brands fa-ethereum\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Email</small>\n\n\t\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Valid email is: a@b.c\">\n\t\t\t\t\t\t\t<input className=\"input100\" type=\"text\"\n\t\t\t\t\t\t\t\tname=\"correo\" value={correo} onChange={handleInputChangeLogin} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<small id=\"emailHelp\" className=\"form-text text-muted\">Password</small>\n\n\t\t\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Enter password\">\n\t\t\t\t\t\t\t<span className=\"btn-show-pass\">\n\t\t\t\t\t\t\t\t<i className=\"zmdi zmdi-eye\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input className=\"input100\" type=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\" value={password} onChange={handleInputChangeLogin} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"container-login100-form-btn\">\n\t\t\t\t\t\t\t<div className=\"wrap-login100-form-btn\">\n\t\t\t\t\t\t\t\t<div className=\"login100-form-bgbtn\"></div>\n\t\t\t\t\t\t\t\t<button className=\"login100-form-btn\">\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"text-center p-t-115\">\n\t\t\t\t\t\t\t<span className=\"txt1\">\n\t\t\t\t\t\t\t\tDon’t have an account?\n\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<script src=\"'./styles/js/main.js\"></script>\n\t\t<script src=\"'./styles/vendor/countdowntime/countdowntime.js\"></script>\n\n\t\t<script src=\"'./styles/vendor/daterangepicker/daterangepicker.js\"></script>\n\t\t<script src=\"'./styles/vendor/daterangepicker/moment.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/select2/select2.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/bootstrap/js/bootstrap.min.js\"></script>\n\n\t\t<script src=\"'./styles/vendor/bootstrap/js/popper.js\"></script>\n\t\t<script src=\"'./styles/vendor/animsition/js/animsition.min.js\"></script>\n\t\t<script src=\"'./styles/vendor/jquery/jquery-3.2.1.min.js\"></script>\n\n\n\n\t</div>\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\n\n\n\n\nexport const NavPublic = () => {\n\n    // const dispatch = useDispatch();\n\n\n\n    // const handleLogout = () => {\n    //     //history.replace('/login');\n    //     dispatch(startLogout());\n    // }\n\n\n    return (\n\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <Link\n                className=\"navbar-brand\"\n                to=\"/\"\n            >\n                Vote\n            </Link>\n\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul className=\"navbar-nav mr-auto\">\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto \">\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/\"\n                    >\n                        Login\n                    </NavLink>\n\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/resultados\"\n                    >\n                        Resultados\n                    </NavLink>\n\n                </ul>\n            </div>\n\n        </nav>\n    )\n\n\n\n\n}","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { toast } from 'react-toastify';\n\n\nexport const userStartAddNew = ( user ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n     try {\n         \n     \n            const resp = await fetchConToken('auth/new', user, 'POST');\n            const body = await resp.json();\n\n            console.log(body, 'asi lega el body de usuarios')\n\n            if ( body.ok ) {\n                user._id = body.uid;\n                user.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( user );\n                dispatch( userAddNew( user ) );\n            }else{\n                //Swal.fire('Error', body.msg, 'error');\n               \n                // Swal.fire('Error', body.errors?.cedula?.msg ||\n                //  body.errors?.correo?.msg \n                //  || body.errors?.password?.msg \n                //  || body.msg , 'error');\n\n                 toast.error(body.errors?.cedula?.msg ||\n                    body.errors?.correo?.msg \n                    || body.errors?.password?.msg \n                    || body.msg , {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n\n            }\n            //despes\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\n\n\nconst userAddNew = (user) => ({\n    type: types.userAddNew,\n    payload: user\n});\n\nexport const userSetActive = (user) => ({\n    type: types.userSetActive,\n    payload: user\n});\n\nexport const userClearActiveUser = () => ({ type: types.userClearActiveUser });\n\n\n\nexport const userStartUpdate = ( user ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`auth/${ user._id }`, user, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( userUpdated( user ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst userUpdated = ( user ) => ({\n    type: types.userUpdated,\n    payload: user\n});\n\n\nexport const userStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { _id } = getState().user.activeUser;\n        try {\n            const resp = await fetchConToken(`auth/${ _id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( userDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst userDeleted = () => ({ type: types.userDeleted });\n\n\nexport const userStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'auth' );\n            const body = await resp.json();\n            \n            dispatch( userLoaded( body.usuarios ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst userLoaded = (user) => ({\n    type: types.userLoaded,\n    payload: user\n})\n\nexport const userLogout =() => ({ type: types.userLogout });","import React, { useEffect, useState } from 'react';\n\nimport { getStats, getWinner, init } from '../../helpers/getWeb3Vote';\nimport { ToastContainer } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { electionStartLoading } from '../../actions/elections';\nimport moment from 'moment';\nimport { userStartLoading } from '../../actions/users';\n//import 'chart.piecelabel.js';\n\n//--------------IMPORTANTE----------------\n// page de graficos https://js.devexpress.com/Demos/WidgetsGallery/Demo/Charts/FunnelChart/React/Light/\n\n\nimport PieChart, {\n  Legend,\n  Export,\n  Series,\n  Label,\n  Font,\n  Connector,\n} from 'devextreme-react/pie-chart';\n\nimport {\n  Chart, SeriesTemplate, CommonSeriesSettings, Title,\n} from 'devextreme-react/chart'\n\n\nconst dataset = {\n  label: 'Porcentaje %',\n  data: [],\n  backgroundColor: [\n    'rgba(255, 99, 132, 0.2)',\n    'rgba(54, 162, 235, 0.2)',\n    'rgba(255, 206, 86, 0.2)',\n    'rgba(75, 192, 192, 0.2)',\n    'rgba(153, 102, 255, 0.2)',\n    'rgba(255, 159, 64, 0.2)',\n  ],\n  borderColor: [\n    'rgba(255, 99, 132, 1)',\n    'rgba(54, 162, 235, 1)',\n    'rgba(255, 206, 86, 1)',\n    'rgba(75, 192, 192, 1)',\n    'rgba(153, 102, 255, 1)',\n    'rgba(255, 159, 64, 1)',\n  ],\n  borderWidth: 2,\n  options: {\n    plugins: {\n      datalabels: {\n        formatter: (value) => {\n          return value + '%';\n        }\n      }\n    }\n  }\n\n};\n\nlet listasJson = [];\n//const seconds = 120\nexport const ResultsScreen = () => {\n\n\n  const [winner, setWinner] = useState('')\n  const [stats, setStats] = useState()\n  const [totalVotes, setTotalVotes] = useState(0)\n  const [tipoGrafico, setTipoGrafico] = useState(1);\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n  const [users] = useSelector(state => [state.user.usuarios]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userStartLoading());\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(electionStartLoading());\n  }, [dispatch])\n\n\n  //iniciar blockchain\n  useEffect(() => {\n    listasJson = []\n    init();\n    getStatsF()\n    // setInterval(() => {\n    //   getStatsF()\n    // }, (seconds * 1000)); // sec * millsecs\n  }, [])\n\n\n  const getStatsF = () => {\n    getStats()\n      .then(tx => {\n        //console.log(tx, 'asi viene', tx.length, tx[0].voteCount);\n        for (let i = 0; i < tx.length; i++) {\n          let name = tx[i].name;\n          let voteCount = tx[i].voteCount;\n\n          listasJson.push({ name: name, voteCount: voteCount });\n\n        }\n        const labels = tx.map(vote => vote[0])\n        //setProposals(labels)\n\n        let porc = (100 / totalVotantes());\n        const data = tx.map(vote => (Number(vote[1]) * porc))\n        const datasets = [{\n          ...dataset,\n          data\n        }]\n\n        const statsData = {\n          labels,\n          datasets,\n\n        }\n        setStats(statsData)\n        const data2 = tx.map(vote => Number(vote[1]));\n        const total = data2.reduce((acc, item) => acc + item)\n        setTotalVotes(total)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const getWinnerF = () => {\n    getWinner()\n      .then(tx => {\n        setWinner(tx)\n      })\n      .catch(err => console.log(err))\n  };\n\n  const totalVotantes = () => {\n\n    let cont = 0;\n    for (let i = 0; i < users.length; i++) {\n\n      if (users[i].rol === \"USER_ROLE\") {\n        cont++;\n      }\n    }\n    //console.log('num de votantes', cont);\n    return cont;\n  }\n\n  const percent = () => {\n    const val = ((totalVotes * 100) / totalVotantes()).toFixed(2)\n    return `${val}%`\n  }\n\n  const handleInputChange = ({ target }) => {\n    setTipoGrafico(target.value)\n  }\n\n\n  //console.log(stats, 'final data')\n\n  // function customizeText(arg) {\n  //   console.log(arg, 'trae');\n  //   //console.log(`votos: ${arg.valueText} (${arg.percentText})`, 'cada grafica');\n  //   return `votos: ${arg.valueText} (${arg.percentText})`;\n  // }\n\n  function roundToTwo(num) {\n    return +(Math.round(num + \"e+2\") + \"e-2\");\n  }\n\n  function customizeText2(arg) {\n    let porc = (100 / totalVotantes());\n    return `votos: ${arg.valueText} (${roundToTwo(arg.value * porc)}%)`;\n  }\n\n\n  if (totalVotantes() === 0) return <span>No hay votantes</span>\n  if (elections.length === 0) return <span>Loading</span>\n  const end = moment(elections[0].end);\n  const nameElection = (elections[0].nombre);\n  const now = moment().seconds(0).add(0, 'hours'); // 3:00:00\n  const fechaActual = now;\n\n  if (users.length === 0) return <span>Loading</span>\n  if (!stats) return <div className=\"padre\">\n\n    <div className=\"spinner\">\n      <span>Loading...</span>\n      <div className=\"half-spinner\"></div>\n    </div>\n  </div>\n  //console.log(listasJson, 'a json');\n\n  return <div className='container'>\n\n    {(fechaActual > end) ?\n\n      <div>\n\n        <h2 className=\"titulos\"> Resultados de la {nameElection}</h2>\n\n        <div className=\"form-group\">\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Seleccione el tipo de grafico</small>\n          <select className=\"form-control\"\n            name=\"tipoGrafico\"\n            value={tipoGrafico}\n            onChange={handleInputChange}>\n\n            <option key={1} value={1}> Gráfico circular </option>\n            <option key={2} value={2}> Gráfico de barras </option>\n            <option key={3} value={3}> Gráfico de barras Slide </option>\n          </select>\n        </div>\n\n        {tipoGrafico === \"1\" ?\n          <PieChart id=\"pie\"\n            palette=\"Bright\"\n            type=\"doughnut\"\n            dataSource={listasJson}\n          // title=\"Olympic Medals in 2008\"\n          >\n            <Legend\n              orientation=\"horizontal\"\n              itemTextPosition=\"right\"\n              horizontalAlignment=\"center\"\n              verticalAlignment=\"bottom\"\n              columnCount={4} />\n            <Export enabled={true} />\n            <Series argumentField=\"name\" valueField=\"voteCount\">\n              <Label\n                visible={true}\n                position=\"columns\"\n                customizeText={customizeText2}>\n                <Font size={16} />\n                <Connector visible={true} width={0.5} />\n              </Label>\n            </Series>\n          </PieChart>\n\n          : tipoGrafico === \"2\" ?\n            <Chart\n              id=\"chart\"\n              palette=\"Soft\"\n              dataSource={listasJson}>\n              <CommonSeriesSettings\n                argumentField=\"name\"\n                valueField=\"voteCount\"\n                type=\"bar\"\n                ignoreEmptyPoints={true}\n              >\n                <Label\n                  visible={true}\n                  position=\"columns\"\n                  customizeText={customizeText2}>\n                  <Font size={15} />\n\n                </Label>\n              </CommonSeriesSettings>\n              <SeriesTemplate nameField=\"name\" />\n              <Title\n              // text= {`resulatdo de la `+ nameElection} \n              // subtitle=\"as of January 2017\"\n              />\n            </Chart>\n            : tipoGrafico === \"3\" ?\n              <Chart\n                id=\"chart\"\n                palette=\"Soft\"\n                rotated={true}\n                dataSource={listasJson}>\n                <CommonSeriesSettings\n                  argumentField=\"name\"\n                  valueField=\"voteCount\"\n                  type=\"bar\"\n                  ignoreEmptyPoints={true}\n\n                >\n\n                  <Label\n                    visible={true}\n                    position=\"columns\"\n                    customizeText={customizeText2}>\n                    <Font size={15} />\n                    <Connector visible={true} width={0.5} />\n                  </Label>\n                </CommonSeriesSettings>\n                <SeriesTemplate nameField=\"name\" />\n                <Title\n                // text=\"Age Breakdown of Facebook Users in the U.S.\"\n                // subtitle=\"as of January 2017\"\n                />\n                <Export enabled={true} />\n              </Chart>\n              :\n              <PieChart id=\"pie\"\n                palette=\"Bright\"\n                type=\"doughnut\"\n                dataSource={listasJson}\n              // title=\"Olympic Medals in 2008\"\n              >\n                <Legend\n                  orientation=\"horizontal\"\n                  itemTextPosition=\"right\"\n                  horizontalAlignment=\"center\"\n                  verticalAlignment=\"bottom\"\n                  columnCount={4} />\n                <Export enabled={true} />\n                <Series argumentField=\"name\" valueField=\"voteCount\">\n                  <Label\n                    visible={true}\n                    position=\"columns\"\n                    customizeText={customizeText2}>\n                    <Font size={16} />\n                    <Connector visible={true} width={0.5} />\n                  </Label>\n                </Series>\n              </PieChart>\n\n\n        }\n\n        <ToastContainer />\n        <div>\n\n          {\n            totalVotes && totalVotantes() &&\n            <>\n              <p>Votos: {totalVotes}/{totalVotantes()}</p>\n              <div className=\"progress my-2\" style={{ height: 30 }}>\n                <div className=\"progress-bar\" role=\"progressbar\" style={{ width: percent() }} aria-valuenow={totalVotes} aria-valuemin=\"0\" aria-valuemax={totalVotantes()}>{percent()}</div>\n              </div>\n            </>\n          }\n          {\n            winner &&\n            <h5 className='my-2 titulos'>Actual winner: {winner}</h5>\n          }\n\n\n        </div>\n\n        <div className='d-flex justify-content-between my-2'>\n          <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-primary\" onClick={getWinnerF}>Obtener ganador</button>\n        </div>\n      </div>\n      :\n      <div className=\"titulos\">\n        <h1>Eleccion en proceso</h1>\n        <h2>Fecha de Resultados: {moment(end).format('YYYY-MM-DD HH:mm:ss')}</h2>\n      </div>\n    }\n\n  </div>\n\n};\n","import React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { NavPublic } from '../components/ui/NavPublic';\n\nimport { ResultsScreen } from '../components/vote/ResultsScreen';\n\n\n\nexport const DashboardPublic = () => {\n    return (\n        <>\n            <NavPublic />\n\n            <div >\n                <Routes>\n                    <Route path=\"login\" element={<LoginScreen />} />\n                    <Route path=\"resultados\" element={<ResultsScreen />} />\n\n                    <Route path=\"/\" element={<LoginScreen />} />\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {  useLocation } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { DashboardPublic } from './DashboardPublic';\n\n\n\nexport const PrivateRoute = ({ children }) => {\n\n    const { uid} = useSelector( state => state.auth);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(startChecking())\n    },[dispatch])\n\n    // console.log(checking);\n    // console.log(rol);\n    // console.log('en private route');\n\n    // guardar la ultima pagina visitada\n    const location= useLocation();\n    localStorage.setItem('lastPath', location.pathname);\n    //console.log(location);\n\n\n    return !!uid\n        ? children\n        : <DashboardPublic/>\n}\n","import React  from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Navigate } from 'react-router-dom';\nimport { DashboardPublic } from './DashboardPublic';\n\n\n\n\n\nexport const PublicRoute = ({ children }) => {\n\n   \n    const {uid} = useSelector( state => state.auth);\n\n    return (!!uid)\n        ? <Navigate to=\"/\" />\n        :  <DashboardPublic/>\n        // :  <DashboardPublic/>\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { electionClearActiveElection, electionStartAddNew, electionStartUpdated} from '../../actions/elections';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(0, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  nombre: '',\n  descripcion: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate()\n}\n\n\nexport const EleccionModal = () => {\n\n\n  //const [isOpen, setIsOpen] = useState(true); // abrir y cerrar el formulario\n  // toma los valores del state ui\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeElection } = useSelector(state => state.eleccion);\n\n\n  //const [dateStart, setDateStart] = useState(now.toDate()); //estado de las fechas del form\n  //const [dateEnd, setDateEnd] = useState(nowPlus1.toDate()); //estdo fin de la fecha del form\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre, descripcion, start, end } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n\n  useEffect(() => {\n    if (activeElection) {\n      setFormValues(activeElection);\n      //console.log('complet stado')\n    } else {\n      setFormValues(initEvent);\n      //console.log('borrando stado')\n    }\n  }, [activeElection, setFormValues])\n\n  //console.log(activeElection)\n\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(electionClearActiveElection());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n  const handleStartDateChange = (e) => {\n    //setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    // setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e\n    })\n  }\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    //console.log(formValues, 'enviados desde el form')\n\n    //validaciones\n    // const momentStart = moment(start);\n    // const momentEnd = moment(end);\n\n    // if (momentStart.isSameOrAfter(momentEnd)) {\n    //   return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n    // }\n\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeElection) {\n      dispatch(electionStartUpdated(formValues))\n    } else {\n      dispatch(electionStartAddNew(formValues));\n    }\n\n\n    setTitleValid(true);\n    closeModal();\n\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h2> {(activeElection) ? 'Editar eleccion' : 'Nueva eleccion'} </h2>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={end}\n            minDate={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre de la eleccion\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Descripcion\"\n            rows=\"5\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Descripcion adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { electionSetActive, electionStartLoading, electionStartDelete } from '../../actions/elections';\nimport { uiOpenModal } from '../../actions/ui';\nimport moment from 'moment'\nimport Swal from 'sweetalert2';\n\nimport { EleccionModal } from './EleccionModal';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Table  from 'react-bootstrap/Table';\n\n\n\n\n\nexport const EleccionScreen = () => {\n\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n\n  //para controlar si tiene listas cada eleccion \n\n  //console.log(elections, \"si llega estos datos\");\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n    dispatch(uiOpenModal());\n  }\n\n  const onSelectElection = (e) => {\n    dispatch(electionSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletElection = (e) => {\n    dispatch(electionSetActive(e));\n\n\n\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    Swal.fire({\n      title: 'Eliminar',\n      text: \"Estas seguro de eliminar esta elección?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delet it!',\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        if (e.lists?.length > 0) {\n          toast.error('Tiene Listas', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        } else {\n          dispatch(electionStartDelete());\n        }\n\n      } else if (\n        /* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelado',\n          'Tu eleccion sigue activa :(',\n          'error'\n        )\n      }\n    })\n\n  }\n\n  // console.log('llega a elecc');\n  return (\n\n\n\n    <div >\n      <br />\n      <h2 className=\"titulos\">Elecciones</h2>\n\n     \n\n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n      <br />\n      <ToastContainer></ToastContainer>\n      <div className=\"table-responsive-sm\">\n        \n        <Table className=\"titulos table table-hover\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Descripcion</th>\n              <th>Fecha Inicio</th>\n              <th>Fecha Fin</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              elections.map((eleccion) => {\n                return (\n                  <tr key={eleccion.id}>\n                    <td>{eleccion.nombre}</td>\n                    <td>{eleccion.descripcion}</td>\n                    <td>{moment(eleccion.start).format('YYYY-MM-DD HH:mm:ss')}</td>\n                    <td>{moment(eleccion.end).format('YYYY-MM-DD HH:mm:ss')}</td>\n                    <td>\n                      <button\n                        className=\"btn btn-primary userListEdit\"\n                        onClick={() => onSelectElection(eleccion)}\n\n                      >\n                        <i className=\"fas fa-edit\"></i>\n                      </button>\n                      {\"   \"}\n                      <button\n                        className=\"btn btn-danger userListEdit\"\n                        onClick={() => onDeletElection(eleccion)}\n                      >\n                        <i className=\"fas fa-trash-alt\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n      </div>\n\n      <EleccionModal />\n\n\n\n    </div>\n  );\n}\n","\n\nexport const fileUpload = async ( file ) => {\n\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/universidad-tecnica-del-norte/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','react-vote');\n    formData.append('file', file );\n\n    try {\n        \n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if ( resp.ok ) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n\n    } catch (err) {\n        throw err;\n    }\n\n\n    // return url de la imagen\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { types } from \"../types/types\";\nimport { toast } from 'react-toastify';\n\n\nexport const listaStartAddNew = (lista) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('listas', lista, 'POST');\n            const body = await resp.json();\n\n            console.log(body, 'lo q viene del formulario')\n\n            if (body.ok) {\n                lista.id = body.lista.id; //id de la eleccion una vez en la bdd\n                lista.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log(lista, 'lo q se guarda en la bdd');\n                dispatch(listaAddNew(lista));\n            } else {\n\n                toast.error( body.errors?.eleccion?.msg ||\n                    body.errors?.nombre?.msg\n                    || body.msg, {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                  \n                // Swal.fire('Error', body.errors?.eleccion?.msg ||\n                //     body.errors?.nombre?.msg\n                //     || body.msg, 'error');\n\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n\n\n    }\n};\n\n\n//estas funciones se muestran en los screens para llamarlas y modificarlas\nconst listaAddNew = (lista) => ({\n    type: types.listaAddNew,\n    payload: lista\n});\n\nexport const listaSetActive = (lista) => ({\n    type: types.listaSetActive,\n    payload: lista\n});\n\nexport const listaClearActiveLista = () => ({\n    type: types.listaClearActiveElection\n});\n\nexport const listaStartUpdated = (lista) => {\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`listas/${lista.id}`, lista, 'PUT');\n            const body = await resp.json();\n\n            console.log(lista)\n\n            if (body.ok) {\n                dispatch(listaUpdated(lista));\n                console.log('sie entra al update')\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n\n            }\n        } catch (error) {\n            console.log(error);\n\n        }\n    }\n}\n\n\nconst listaUpdated = (lista) => ({\n    type: types.listaUpdated,\n    payload: lista\n});\n\n\nexport const listaStartLoading = () => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken('listas');\n            const body = await resp.json();\n            console.log(body)\n            //const listas = prepareElections( body.lista );\n            dispatch(listaLoaded(body.listas));\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst listaLoaded = (lists) => ({\n    type: types.listaLoaded,\n    payload: lists\n})\n\nexport const listaStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const { id } = getState().lista.activeLista;\n        console.log(id)\n        try {\n            const resp = await fetchConToken(`listas/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(listaDeleted());\n                console.log('entra a eliminar')\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst listaDeleted = () => ({ type: types.listaDeleted });\n\nexport const listaLogout = () => ({ type: types.listaLogout });\n\n\n//metodo para agregar imagenes\nexport const startUploading = (file) => {\n    return async () => {\n\n\n        console.log(file);\n        //console.log(activeLista);\n\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        console.log(fileUrl)\n        Swal.close();\n\n        return fileUrl;\n\n    }\n    // activeLista.url = fileUrl;\n\n    // dispatch( startSaveNote( activeLista ) )\n\n\n\n}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { listaClearActiveLista, listaStartAddNew, listaStartLoading, listaStartUpdated } from '../../actions/lists';\nimport { electionStartLoading } from '../../actions/elections';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fileUpload } from '../../helpers/fileUpload';\nimport Swal from 'sweetalert2';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\n\nconst initEvent = {\n  nombre: '',\n  img: '',\n  descripcion: '',\n  eleccion: ''\n\n}\n\nexport const ListaModal = ({ idEleccion }) => {\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeLista } = useSelector(state => state.lista);\n\n  const { election: elections } = useSelector(state => state.eleccion);\n\n  useEffect(() => {\n    dispatch(electionStartLoading());\n  }, [dispatch])\n\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre, descripcion, img } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n\n  useEffect(() => {\n    if (activeLista) {\n      setFormValues(activeLista);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeLista, setFormValues])\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(listaClearActiveLista());\n    //dispatch(listaStartLoading());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    // const nuevo= {...formValues, eleccion: formValues.eleccion.length===0?\n    //    elections[0].id\n    //     :formValues.eleccion}\n\n    //funcionando\n    const nuevo = {\n      ...formValues, eleccion:\n        idEleccion\n    }\n\n    //funcionando con errores\n    // const nuevo= {...formValues, eleccion: idEleccion==='' ? elections[0].id\n    // : idEleccion\n    // }\n    e.preventDefault();\n\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n    if (activeLista) {\n      dispatch(listaStartUpdated(formValues))\n    } else {\n      dispatch(listaStartAddNew(nuevo));\n    }\n\n    setTitleValid(true);\n    dispatch(listaStartLoading());\n    closeModal();\n  }\n\n\n  //metodo par cargar las imagenes desde cloudflare\n  // const handlePictureClick = () => {\n  //   document.querySelector('#fileSelector').click();\n  // }\n\n  //pasa el valor al img del objeto antes de crearse\n  const startUploading = (file) => {\n    return async () => {\n      //console.log(file);\n      Swal.fire({\n        title: 'Uploading...',\n        text: 'Please wait...',\n        allowOutsideClick: false,\n        onBeforeOpen: () => {\n          Swal.showLoading();\n        }\n      });\n      const fileUrl = await fileUpload(file);\n      //console.log(fileUrl)\n      setFormValues({ ...formValues, img: fileUrl })\n      Swal.close();\n    }\n  }\n  //toma los valores del archivo seleccionado\n  const handleFileChange = (e) => {\n    console.log(e.target.files);\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n    //console.log(img, 'haber q esta en el state')\n  }\n\n  if (elections.length === 0) return <span>Loading</span>\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h2> {(activeLista) ? 'Editar lista' : 'Nueva lista'} </h2>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n\n\n        <div className=\"form-group\">\n          <input\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Imagen de la lista</small>\n        </div>\n\n        {\n          (img)\n          && (\n            <div className=\"notes__image\">\n              <img className='imgCentrar'\n                src={img}\n                alt=\"\"\n              />\n            </div>\n          )}\n        <br />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre de la lista\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Descripcion\"\n            rows=\"3\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Descripcion adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { listaSetActive, listaStartAddNew, listaStartDelete, listaStartLoading, listaStartUpdated } from '../../actions/lists';\nimport { ListaModal } from './ListaModal';\nimport { AddListas, addressContract, getStats, init } from '../../helpers/getWeb3Vote';\nimport Swal from 'sweetalert2';\nimport { electionStartLoading } from '../../actions/elections';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Table } from 'react-bootstrap';\n\nimport * as XLSX from 'xlsx';\n\n\nlet tamaño = 0;\nlet file;\nexport const ListaScreen = () => {\n\n  let listasBlockchain = [];\n  let XL_row_object = [];\n\n\n  const [lists] = useSelector(state => [state.lista.lista]);\n  const [elections] = useSelector(state => [state.eleccion.election]);\n  const [idEleccion, setIdEleccion] = useState(\"\");\n  const [stats, setStats] = useState()\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n  //solo de test eset useEffect\n  useEffect(() => {\n    dispatch(listaStartLoading());\n\n  }, [dispatch, idEleccion])\n\n  const handleInputChange = ({ target }) => {\n    const selectedElection = target.value;\n    setIdEleccion(selectedElection)\n  }\n\n\n  const handleSubmitForm = (e) => {\n\n    setIdEleccion(e.target.value)\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    init();\n    console.log('iniciando blockchain');\n    obtenerListas();\n  }, [])\n\n  useEffect(() => {\n\n    dispatch(listaStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n\n\n    if (tamaño === 0) {\n      dispatch(uiOpenModal())\n    } else {\n      toast.error('Tiene listas agregadas a blockchain!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  const onSelectElection = (e) => {\n\n\n    if (tamaño === 0) {\n      dispatch(listaSetActive(e));\n      dispatch(uiOpenModal());\n    } else {\n      toast.error('Tiene listas agregadas a blockchain!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n  }\n\n  const onDeletElection = (e) => {\n\n    if (tamaño === 0) {\n\n\n\n      dispatch(listaSetActive(e));\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-success',\n          cancelButton: 'btn btn-danger'\n        },\n        buttonsStyling: false\n      })\n\n      Swal.fire({\n        title: 'Eliminar',\n        text: \"Estas seguro de eliminar esta lista?\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delet it!',\n\n      }).then((result) => {\n        if (result.isConfirmed) {\n\n          if (e.candidates?.length > 0) {\n            toast.error('Tiene candidatos', {\n              position: \"top-right\",\n              autoClose: 2000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            dispatch(listaStartDelete());\n          }\n        } else if (\n          /* Read more about handling dismissals below */\n          result.dismiss === Swal.DismissReason.cancel\n        ) {\n          swalWithBootstrapButtons.fire(\n            'Cancelado',\n            'Tu lista sigue activa :(',\n            'error'\n          )\n        }\n      })\n\n    } else {\n      toast.error('Tiene listas agregadas a blockchain!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n  }\n\n  const obtenerListas = () => {\n\n    //setStats('true');\n    getStats()\n      .then(tx => {\n        //console.log(tx,'estado actual');\n        tamaño = tx.length;\n        let tamaño2 = tx.length;\n        \n          setStats(tamaño2);\n        //console.log('es lo q va ', tx.length);\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  const test = (estado) => {\n\n    const data = {\n      ...lists[0],\n      voteBN: estado //true\n    }\n    dispatch(listaStartUpdated(data));\n    dispatch(listaStartLoading());\n  }\n\n  const limpiarListas = () => {\n    for (let i = listasBlockchain.length; i > 0; i--) {\n      //console.log('entra a borrar 1')\n      listasBlockchain.pop();\n    }\n  }\n\n\n  const agregarListas = () => {\n    limpiarListas()\n\n    obtenerListas();\n    if (lists.length > 0) {\n      for (let index = 0; index < lists.length; index++) {\n        listasBlockchain.push((lists[index].nombre));\n      }\n      if (tamaño === 0) {\n        test(false);\n\n      }\n\n\n\n      Swal.fire({\n        title: \"Blockchain\",\n        text: \"¿Está seguro de guardar las listas en la blockchain? Una vez guardadas no se podrán agregar,editar o eliminar más listas\",\n        imageUrl: \"https://wetech.mx/wp-content/uploads/2020/12/kisspng-blockchain-vector-graphics-computer-icons-illustra-flvr-calculator-chasing-coins-5bf69839402611.9278574715428874812628.png\",\n        imageWidth: 250,\n        imageHeight: 225,\n        imageAlt: \"Guardar Listas\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        confirmButtonColor: \"#00ff55\",\n        cancelButtonColor: \"#999999\",\n        reverseButtons: true,\n\n      }).then(resultado => {\n        if (resultado.value) {\n          //console.log('como llega el tamaño blockchain', tamaño)\n          if (tamaño > 0) {\n            toast.error('Ya tiene listas en la blockchain', {\n              position: \"top-right\",\n              autoClose: 2000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n\n          } else {\n            const swalWithBootstrapButtons = Swal.mixin({\n              customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger',\n                denyButton: 'btn btn-secondary'\n\n              },\n              buttonsStyling: false\n            })\n            Swal.fire({\n              title: 'Voto Nulo y Blanco',\n              text: \"Desea habilitar el voto Nulo y Blanco al proceso electoral?\",\n              icon: 'question',\n              showCancelButton: true,\n              confirmButtonColor: '#3085d6',\n              cancelButtonColor: '#d33',\n              confirmButtonText: 'Si, agregar voto N/B!',\n              cancelButtonText: 'No, solo listas',\n            \n            }).then((result) => {\n              if (result.isConfirmed) {\n\n                listasBlockchain.push(\"Voto Blanco\");\n                listasBlockchain.push(\"Voto Nulo\");\n                //console.log(listasBlockchain, 'esto es lo con votos bn')\n\n                Swal.fire({\n                  title: 'Agregando a blockchain...',\n                  text: 'Please wait...',\n                  allowOutsideClick: false,\n                  onBeforeOpen: () => {\n                    Swal.showLoading();\n                  }\n                });\n\n                AddListas(listasBlockchain)\n                  .then(tx => {\n                    test(true);\n                    Swal.close();\n                    console.log(tx, 'addd a block');\n                    tamaño=4;\n                    //console.log('cuando se agrega a block con N/B', tamaño);\n                    Swal.fire('Saved!', 'Se encuentra habilitado los votos nulos y blancos en el proceso electoral', 'success')\n                  })\n                  .catch(err => {\n                    console.log(err);\n                    //Swal.fire('Error', 'Falla en conexión a la blockchain', 'error')\n                  })\n              } else if (\n                /* Read more about handling dismissals below */\n                result.dismiss === Swal.DismissReason.cancel\n              ) {\n               //console.log(listasBlockchain, 'esto es lo q se piensa enviar sin voto nb')\n\n                Swal.fire({\n                  title: 'Agregando a blockchain...',\n                  text: 'Please wait...',\n                  allowOutsideClick: false,\n                  onBeforeOpen: () => {\n                    Swal.showLoading();\n                  }\n                });\n\n                AddListas(listasBlockchain)\n                  .then(tx => {\n                    Swal.close();\n                    console.log(tx, 'addd a block');\n                    tamaño=4;\n                    //console.log('cuando se agrega a block sin N/B', tamaño);\n                    swalWithBootstrapButtons.fire(\n                      'Saved!', 'Inhabilitado los votos nulos y blancos para el proceso electoral', 'info')\n                  })\n                  .catch(err => {\n                    console.log(err);\n                    //Swal.fire('Error', 'Falla en conexión a la blockchain', 'error')\n                  })\n              }\n            })\n          }\n\n        } else {\n          limpiarListas()\n        }\n      }\n      )\n    } else {\n      toast.error('Por favor agregue listas antes de agregar a la blockchain', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  const handleFileChange = (e) => {\n    //console.log(e.target.files);\n    file = e.target.files[0];\n    const target = e.target;\n\n    if (file) {\n      // dispatch(startUploading(file));\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(target.files[0])\n      reader.onloadend = (e) => {\n        var data = new Uint8Array(e.target.result);\n        var workbook = XLSX.read(data, { type: 'array' });\n        //console.log(workbook, 'workbook');\n\n        workbook.SheetNames.forEach(function (sheetName) {\n\n          XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n          //console.log(XL_row_object, 'xl');\n          //console.log(XL_row_object.length, 'xl deimesnsion');\n\n        })\n        //console.log(XL_row_object, 'ya converido de xls');\n\n      }\n    }\n  }\n\n  const saveListasBDD = () => {\n\n    if (tamaño === 0) {\n      file = \"\";\n      //recorre para agregar al json un campo mas\n      for (let i = 0; i < XL_row_object.length; i++) {\n        XL_row_object[i].eleccion = idEleccion;\n      }\n\n      setTimeout(() => {\n        for (let i = 0; i < XL_row_object.length; i++) {\n          dispatch(listaStartAddNew(XL_row_object[i]))\n        }\n      }, (2000));\n\n      dispatch(listaStartLoading())\n      document.getElementById(\"file\").value = '';\n      //console.log(XL_row_object, 'metodo add bdd');\n    } else {\n      toast.error('Tiene listas agregadas a blockchain!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n\n  }\n\n\n\n  if (elections.length === 0) return <span>Loading</span>\n\n  if (idEleccion === '') {\n    setIdEleccion(elections[0].id)\n  }\n\n  if (idEleccion === '') return <span>Loading</span>\n\n  if (stats=== undefined) return <div className=\"padre\">\n\n    <div className=\"spinner\">\n      <span>Loading...</span>\n      <div className=\"half-spinner\"></div>\n    </div>\n  </div>\n\n//console.log(stats, 'esto seria blockchain');\n\n  return (\n    <div className=\"container py-4\">\n      <ToastContainer></ToastContainer>\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Elecciones</small>\n          <select className=\"form-control\"\n            name=\"idEleccion\"\n            value={idEleccion}\n            onChange={handleInputChange}>\n            {\n              elections.map(election => (\n                <option key={election.id} value={election.id} >{election.nombre}</option>\n              ))\n            }\n          </select>\n        </div>\n      </form>\n\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n\n            <input\n              id=\"file\"\n              type=\"file\"\n              name=\"file\"\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n              onChange={handleFileChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Archivo de Excel</small>\n\n          </div>\n\n          <div className=\"col\">\n            <button\n              className=\"btn btn-dark userListEdit\" onClick={saveListasBDD}>\n              <i className=\"fa-solid fa-file-csv\"> </i>\n              <span> Cargar listas</span>  \n            </button>\n          </div>\n\n          <div className=\"col\">\n\n          </div>\n\n\n        </div>\n      </div>\n\n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n      </button>\n\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <br /><br /><br />\n\n          <div className=\"card card-body bg-light rounded-3 mb-4\">\n            <div className=\"d-flex align-items-center\">\n              <span className=\"material-icons\">\n                <i className=\"fa-solid fa-wallet\"></i>\n                Contract BSC: </span>\n            </div>\n            <span id=\"account\">{addressContract}</span>\n          </div>\n\n        </div>\n\n        <div className=\"col-md-8\">\n          <br /><br /><br />\n          <Table className=\"titulos table table-hover\">\n            <thead>\n              <tr>\n\n                <th>Lista</th>\n                <th>Nombre</th>\n                <th>Descripcion</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n\n                lists.map((lista) => {\n                  return (\n\n                    <tr key={lista.id} >\n\n                      {lista.eleccion._id && lista.eleccion._id.search(idEleccion) ? '' :\n                        <>\n                          <td>\n                            {\n                              (lista.img)\n                              && (\n\n                                <div >\n                                  <img className='userListImg'\n                                    src={lista.img}\n                                    alt=\"\"\n                                  />\n                                </div>\n                              )}\n                          </td>\n                          <td>{lista.nombre}</td>\n                          <td>{lista.descripcion}</td>\n\n\n                          <td>\n                            <button\n                              className=\"btn btn-primary userListEdit\"\n                              onClick={() => onSelectElection(lista)}\n\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </button>\n                            {\"   \"}\n                            <button\n                              className=\"btn btn-danger userListEdit\"\n                              onClick={() => onDeletElection(lista)}\n                            >\n                              <i className=\"fas fa-trash-alt\"></i>\n                            </button>\n                          </td>\n                        </>}\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n\n\n      <button type=\"button\" name=\"vote\" id=\"vote\" className=\"btn btn-success fab-danger userListEdit\" onClick={agregarListas}>\n        <i className=\"fa-brands fa-ethereum \"></i>\n        <span> Agregar a blockchain</span>\n      </button>\n\n      <ListaModal idEleccion={idEleccion} />\n\n\n\n    </div>\n  );\n}\n","import Swal from 'sweetalert2';\n\nimport { fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\n\n\nexport const candidatoStartAddNew = ( candidato ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('candidatos', candidato, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                candidato.id = body.candidato.id;\n                candidato.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( candidato );\n                dispatch( candidatoAddNew( candidato ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst candidatoAddNew = (candidato) => ({\n    type: types.candidatoAddNew,\n    payload: candidato\n});\n\nexport const candidatoSetActive = (candidato) => ({\n    type: types.candidatoSetActive,\n    payload: candidato\n});\n\nexport const candidatoClearActiveCandidato = () => ({ type: types.candidatoClearActiveCandidato });\n\n\n\nexport const candidatoStartUpdate = ( candidato ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`candidatos/${ candidato.id }`, candidato, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( candidatoUpdated( candidato ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst candidatoUpdated = ( event ) => ({\n    type: types.candidatoUpdated,\n    payload: event\n});\n\n\nexport const candidatoStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().candidato.activeCandidato;\n        try {\n            const resp = await fetchConToken(`candidatos/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( candidatoDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst candidatoDeleted = () => ({ type: types.candidatoDeleted });\n\n\nexport const candidatoStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'candidatos' );\n            const body = await resp.json();\n            \n            dispatch( candidatoLoaded( body.candidatos ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst candidatoLoaded = (candidato) => ({\n    type: types.candidatoLoaded,\n    payload: candidato\n})\n\nexport const candidatoLogout =() => ({ type: types.candidatoLogout });","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const cargoStartAddNew = ( cargo ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('cargos', cargo, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body)\r\n\r\n            if ( body.ok ) {\r\n                cargo.id = body.cargo.id;\r\n                cargo.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( cargo );\r\n                dispatch( cargoAddNew( cargo ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst cargoAddNew = (cargo) => ({\r\n    type: types.cargoAddNew,\r\n    payload: cargo\r\n});\r\n\r\nexport const cargoSetActive = (cargo) => ({\r\n    type: types.cargoSetActive,\r\n    payload: cargo\r\n});\r\n\r\nexport const cargoClearActiveCargo = () => ({ type: types.cargoClearActiveCargo });\r\n\r\n\r\n\r\n\r\n\r\nexport const cargoStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().cargo.activeCargo;\r\n        try {\r\n            const resp = await fetchConToken(`cargos/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( cargoDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst cargoDeleted = () => ({ type: types.cargoDeleted });\r\n\r\n\r\nexport const cargoStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'cargos' );\r\n            const body = await resp.json();\r\n            \r\n            dispatch( cargoLoaded( body.cargos ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst cargoLoaded = (cargo) => ({\r\n    type: types.cargoLoaded,\r\n    payload: cargo\r\n})\r\n\r\nexport const cargoLogout =() => ({ type: types.cargoLogout });","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { listaStartLoading } from '../../actions/lists';\nimport { candidatoClearActiveCandidato, candidatoStartAddNew, candidatoStartLoading, candidatoStartUpdate } from '../../actions/candidates';\nimport Swal from 'sweetalert2';\nimport { fileUpload } from '../../helpers/fileUpload';\nimport { cargoStartLoading } from '../../actions/cargos';\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst initEvent = {\n    nombre: '',\n    apellido: '',\n    cargo: '',\n    lista: '',\n    img: ''\n}\n\nexport const CandidatoModal = ({ idLista }) => {\n\n\n    //const [isOpen, setIsOpen] = useState(true); // abrir y cerrar el formulario\n    // toma los valores del state ui\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch(); //modifica el estado de las funciones\n    const { activeCandidato } = useSelector(state => state.candidato);\n    const [lists] = useSelector(state => [state.lista.lista]);\n    const [cargos] = useSelector(state => [state.cargo.cargos]);\n\n\n    useEffect(() => {\n        dispatch(listaStartLoading());\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(cargoStartLoading());\n    }, [dispatch])\n\n\n    const [formValues, setFormValues] = useState(initEvent);\n    const { nombre, apellido, cargo, img } = formValues;\n    const [titleValid, setTitleValid] = useState(true);\n\n    useEffect(() => {\n        if (activeCandidato) {\n            setFormValues(activeCandidato);\n        } else {\n            setFormValues(initEvent);\n        }\n    }, [activeCandidato, setFormValues])\n\n\n    const closeModal = (e) => {\n        dispatch(uiCloseModal());\n        dispatch(candidatoClearActiveCandidato);\n        setFormValues(initEvent); //se cierra el modal y los valores se borran\n    }\n\n    //con el valor de los inputs por medio del name, agrega al state del formValues\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    //tomar todos los valores del formulario al dar al boton guardar\n    const handleSubmitForm = (e) => {\n\n        const nuevo = {\n            ...formValues, lista:\n                idLista, cargo: formValues.cargo === '' ?\n                    cargos[0].nombre\n                    : cargo\n        }\n\n\n        e.preventDefault();\n\n        if (nombre.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeCandidato) {\n            dispatch(candidatoStartUpdate(formValues))\n        } else {\n            dispatch(candidatoStartAddNew(nuevo));\n        }\n        setTitleValid(true);\n        dispatch(candidatoStartLoading());\n        closeModal();\n\n    }\n\n    const startUploading = (file) => {\n        return async () => {\n            //console.log(file);\n            Swal.fire({\n                title: 'Uploading...',\n                text: 'Please wait...',\n                allowOutsideClick: false,\n                onBeforeOpen: () => {\n                    Swal.showLoading();\n                }\n            });\n            const fileUrl = await fileUpload(file);\n            //console.log(fileUrl)\n            setFormValues({ ...formValues, img: fileUrl })\n            Swal.close();\n\n        }\n    }\n    //toma los valores del archivo seleccionado\n    const handleFileChange = (e) => {\n        //console.log(e.target.files);\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file));\n        }\n        //console.log(img, 'haber q esta en el state')\n    }\n\n\n    if (lists.length === 0) return <h1>Loading</h1>\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h2> {(activeCandidato) ? 'Editar candidato' : 'Nuevo candidato'} </h2>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"file\"\n                        name=\"file\"\n                        onChange={handleFileChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Imagen de la lista</small>\n                </div>\n                {\n                    (img)\n                    && (\n                        <div className=\"notes__image\">\n                            <img className='imgCentrar'\n                                src={img}\n                                alt=\"\"\n                            />\n                        </div>\n                    )}\n\n                <div className=\"form-group\">\n                    <label>Nombre</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Nombre del candidato\"\n                        name=\"nombre\"\n                        autoComplete=\"off\"\n                        value={nombre}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"Apellido\"\n                        name=\"apellido\"\n                        autoComplete=\"off\"\n                        value={apellido}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <select className=\"form-control\"\n                        name=\"cargo\"\n                        value={cargo}\n                        onChange={handleInputChange}>\n                        {\n                            cargos.map(cargo => (\n                                <option key={cargo.id} > {cargo.nombre} </option>\n                            ))\n                        }\n\n                    </select>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Cargo del candidato</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { cargoClearActiveCargo, cargoStartAddNew } from '../../actions/cargos';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\n\nconst initEvent = {\n  nombre: '',\n\n}\n\n\nexport const CargoModal = () => {\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeCargo } = useSelector(state => state.cargo);\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { nombre } = formValues;\n\n  //estados para validaciones+\n  const [nameValid, setNameValid] = useState(true);\n\n  useEffect(() => {\n    if (activeCargo) {\n      setFormValues(activeCargo);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeCargo, setFormValues])\n\n\n  const closeModal = (e) => {\n    dispatch(uiCloseModal());\n    dispatch(cargoClearActiveCargo());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    if (nombre.trim().length < 2) {\n      return setNameValid(false);\n    }\n\n    if (activeCargo) {\n      //dispatch(cargoStartUpdated(formValues))\n    } else {\n      dispatch(cargoStartAddNew(formValues));\n    }\n\n    setNameValid(true);\n    closeModal();\n\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h1> {(activeCargo) ? 'Editar eleccion' : 'Nueva eleccion'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!nameValid && 'is-invalid'} `}\n            placeholder=\"Nombre del cargo\"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Cargo para los candidatos</small>\n        </div>\n\n\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { cargoSetActive, cargoStartAddNew, cargoStartDelete, cargoStartLoading } from '../../actions/cargos';\nimport { CargoModal } from './CargoModal';\n\n\nexport const CargoScreen = () => {\n\n  const [cargos] = useSelector(state => [state.cargo.cargos]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    dispatch(cargoStartLoading());\n\n  }, [dispatch])\n\n \n  const onDeletElection = (e) => {\n    dispatch(cargoSetActive(e));\n\n    Swal.fire({\n      title: \"Estas seguro de eliminar el cargo?\",\n      type: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete It\",\n      confirmButtonColor: \"#ff0055\",\n      cancelButtonColor: \"#999999\",\n      reverseButtons: true,\n      focusConfirm: false,\n      focusCancel: true\n    }).then(resultado => {\n      if (resultado.value) {\n        dispatch(cargoStartDelete());\n      } else {\n      }\n    }\n    )\n  }\n\n  const addCargos = async () => {\n\n    const { value: text } = await Swal.fire({\n      input: 'text',\n      title: 'Ingrese un cargo',\n      inputLabel: 'para los candidatos',\n      inputPlaceholder: 'cargo'\n    })\n\n    if (text) {\n      const nuevo = {\n        nombre: text\n      }\n      toast.success( `cargo: ${text} agregado`, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      dispatch(cargoStartAddNew(nuevo));\n    }\n  }\n\n  return (\n    <div >\n      <button\n        className=\"btn btn-dark userListEdit\" onClick={addCargos}>\n        Agregar cargos\n      </button>\n      <div className=\"form-screen \">\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th>Nombre</th>\n              <th>Accion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              cargos.map((cargo) => {\n                return (\n                  <tr key={cargo.id}>\n                    <td>{cargo.nombre}</td>\n                    <td>\n                      <button\n                        className=\"cargosListDelete\"\n                        onClick={() => onDeletElection(cargo)}>\n                        <i className=\"fas fa-trash-alt\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n      \n      <CargoModal/>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { candidatoSetActive, candidatoStartDelete, candidatoStartLoading } from '../../actions/candidates';\nimport { CandidatoModal } from './CandidatoModal';\nimport Swal from 'sweetalert2';\nimport { listaStartLoading } from '../../actions/lists';\nimport { useState } from 'react';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CargoScreen } from '../cargos/CargoScreen';\nimport { Table } from 'react-bootstrap';\n\n\nexport const CandidatoScreen = () => {\n\n\n  const [candidatos] = useSelector(state => [state.candidato.candidatos]);\n  const [cargos] = useSelector(state => [state.cargo.cargos]);\n\n  const [lists] = useSelector(state => [state.lista.lista]);\n  //testeando listas\n  const [idLista, setIdLista] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    dispatch(listaStartLoading());\n\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(candidatoStartLoading());\n\n  }, [dispatch, idLista])\n\n\n  const handleInputChange = ({ target }) => {\n    const selectedLista = target.value;\n    setIdLista(selectedLista);\n    //console.log(idLista, 'esto viene select ')\n  }\n\n  const handleSubmitForm = (e) => {\n\n\n\n    setIdLista(e.target.value)\n\n\n\n    e.preventDefault();\n\n    //console.log(idLista, 'enviados desde el form')\n\n\n  }\n\n\n  //console.log(elections, \"si llega estos datos\");\n\n\n\n\n  useEffect(() => {\n\n    dispatch(candidatoStartLoading());\n\n  }, [dispatch])\n\n  const openModal = () => {\n\n    if (cargos.length > 0) {\n      dispatch(uiOpenModal());\n    } else {\n      toast.error('Por favor agrege los cargos para los candidatos!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n  }\n\n  const onSelectElection = (e) => {\n    dispatch(candidatoSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n  const onDeletElection = (e) => {\n    dispatch(candidatoSetActive(e));\n\n\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    Swal.fire({\n      title: 'Eliminar',\n      text: \"Estas seguro de eliminar este candidato?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delet it!',\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        dispatch(candidatoStartDelete());\n      } else if (\n        /* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelado',\n          'Tu candidato sigue activo :(',\n          'error'\n        )\n      }\n    })\n\n  }\n\n  //if (candidatos.length === 0) return <h1>Loading</h1>\n  if (lists.length === 0) return <h1>Loading</h1>\n  if (idLista === '') {\n    setIdLista(lists[0].id)\n  }\n\n  if (idLista === '') return <h1>Loading</h1>\n\n\n\n  return (\n    <div className=\"container py-4\">\n\n      <h2 className=\"titulos\">Candidatos</h2>\n      <ToastContainer></ToastContainer>\n\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Listas</label>\n\n          <select className=\"form-control\"\n            name=\"idLista\"\n            value={idLista}\n\n            onChange={handleInputChange}>\n\n            {\n\n              lists.map(list => (\n                <option key={list.id} value={list.id} >{list.nombre}</option>\n              ))\n            }\n          </select>\n        </div>\n      </form>\n      <button\n        className=\"btn btn-success fab\" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n      </button>\n      <br />\n      <div>\n\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <CargoScreen />\n          </div>\n          <div className=\"table-responsive-sm col-md-8\">\n            <br />\n            <br />\n            <Table className=\"titulos table table-hover\">\n              <thead>\n                <tr>\n                  <th>Candidato</th>\n                  <th>Nombre</th>\n                  <th>Apellido</th>\n                  <th>Cargo</th>\n                  <th>Acciones</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  candidatos.map((candidate) => {\n                    return (\n                      <tr key={candidate.id}>\n                        {candidate.lista._id && candidate.lista._id.search(idLista) ? '' :\n                          <>\n                            <td>\n                              {\n                                (candidate.img)\n                                && (\n                                  <div>\n                                    <img className='userListImg'\n                                      src={candidate.img}\n                                      alt=\"\"\n                                    />\n                                  </div>\n                                )}\n                            </td>\n                            <td>{candidate.nombre}</td>\n                            <td>{candidate.apellido}</td>\n                            <td>{candidate.cargo}</td>\n                            <td>\n                              <button\n                                className=\"btn btn-primary userListEdit\"\n                                onClick={() => onSelectElection(candidate)}\n                              >\n                                <i className=\"fas fa-edit\"></i>\n                              </button>\n                              <button\n                                className=\"btn btn-danger userListEdit\"\n                                onClick={() => onDeletElection(candidate)}\n                              >\n                                <i className=\"fas fa-trash-alt\"></i>\n                              </button>\n                            </td>\n                          </>}\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n      <CandidatoModal idLista={idLista} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\n\n\nexport const NavAdmin = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        //history.replace('/login');\n        navigate('/',\n        {\n            replace: true\n        });\n        dispatch(startLogout());\n       \n    }\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n\n            <Link\n                className=\"navbar-brand\"\n                to=\"/\"\n            >\n                Vote\n            </Link>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/elecciones\"\n                    >\n                        Elecciones\n                    </NavLink>\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/listas\"\n                    >\n                        Listas\n                    </NavLink>\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/candidatos\"\n                    >\n                        Candidatos\n                    </NavLink>\n\n                    <NavLink\n                        className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                        to=\"/usuarios\"\n                    >\n                        Usuarios\n                    </NavLink>\n                </div>\n\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\n\n                    <ul className=\"navbar-nav ml-auto\">\n\n                        {/* <NavLink\n                            className={({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '')}\n                            to=\"/resultados\"\n                        >\n                            Resultados\n                        </NavLink> */}\n                        <span className=\"nav-item nav-link text-info\">\n                            {name}\n                        </span>\n\n                        <button\n                            className=\"btn btn-outline-danger\"\n                            onClick={handleLogout}\n                        >\n                            <i className=\"fas fa-sign-out-alt\"></i>\n                            <span> Salir</span>\n                        </button>\n\n                    </ul>\n\n                </div>\n\n            </div>\n\n        </nav>\n    )\n}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { userClearActiveUser, userStartAddNew, userStartUpdate } from '../../actions/users';\nimport { toast } from 'react-toastify';\n\nconst { verificarCedula } = require('udv-ec');\nvar validator = require(\"email-validator\");\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\nconst initEvent = {\n  cedula: '',\n  nombre: '',\n  correo: '',\n  password: '',\n  rol: \"\"\n}\n\n\nexport const UserModal = () => {\n\n  const { modalOpen } = useSelector(state => state.ui);\n  const dispatch = useDispatch(); //modifica el estado de las funciones\n  const { activeUser } = useSelector(state => state.user);\n  const [formValues, setFormValues] = useState(initEvent);\n  const { cedula, nombre, correo, password, rol } = formValues;\n\n  //estados para validaciones+\n  const [titleValid, setTitleValid] = useState(true);\n  const [cedulaValid, setCedulaValid] = useState(true);\n  const [correoValid, setCorreoValid] = useState(true);\n\n\n\n  useEffect(() => {\n    if (activeUser) {\n      setFormValues(activeUser);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeUser, setFormValues])\n\n\n  const closeModal = (e) => {\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    dispatch(userClearActiveUser());\n    setFormValues(initEvent); //se cierra el modal y los valores se borran\n  }\n\n  //con el valor de los inputs por medio del name, agrega al state del formValues\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n  //tomar todos los valores del formulario al dar al boton guardar\n  const handleSubmitForm = (e) => {\n\n    const nuevo= {...formValues, rol: formValues.rol===''?\n        \"USER_ROLE\"\n       :formValues.rol}\n    \n    e.preventDefault();\n\n\n    if (nombre.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if(verificarCedula(cedula)=== false){\n      toast.error('Cedula invalida', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n    });\n      return setCedulaValid(false);\n    }\n\n    if(validator.validate(correo)===false){\n      toast.error('Correo invalido', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n    });\n      return setCorreoValid(false);\n    }\n\n    if (activeUser) {\n      dispatch(userStartUpdate(formValues))\n    } else {\n      dispatch(userStartAddNew(nuevo));\n    }\n\n    setTitleValid(true);\n    setCedulaValid(true);\n    setCorreoValid(true);\n    closeModal();\n\n  }\n\n  return (\n    \n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n  \n      <h2> {(activeUser) ? 'Editar usuario' : 'Nuevo usuario'} </h2>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Nombre</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"Nombre \"\n            name=\"nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Cédula</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!cedulaValid && 'is-invalid'} `}\n            placeholder=\"cédula\"\n            name=\"cedula\"\n            autoComplete=\"off\"\n            value={cedula}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Correo</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!correoValid && 'is-invalid'} `}\n            placeholder=\"correo\"\n            name=\"correo\"\n            autoComplete=\"off\"\n            value={correo}\n            onChange={handleInputChange}\n          />\n        </div>\n\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Contraseña</label>\n          <input\n            type=\"password\"\n            className={`form-control ${!titleValid && 'is-invalid'} `}\n            placeholder=\"******\"\n            name=\"password\"\n            autoComplete=\"off\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <select className=\"form-control\"\n            name=\"rol\"\n            value={rol}\n            onChange={handleInputChange}>\n            <option value=\"USER_ROLE\">Elector</option>\n            <option value=\"ADMIN_ROLE\">Administrador</option>\n          </select>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Rol de Usuario</small>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n\n    </Modal>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport Swal from 'sweetalert2';\n\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { userSetActive, userStartAddNew, userStartDelete, userStartLoading, userStartUpdate } from '../../actions/users';\nimport { UserModal } from './UserModal';\n//import { Table } from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\nimport { getStats, init } from '../../helpers/getWeb3Vote';\n\nlet cont=0;\nlet file;\n//let tamaño = 0;\nlet $ = require( \"jquery\" );\n$.DataTable= require('datatables.net')\n\n\nexport const UserScreen = () => {\n\n  let XL_row_object = [];\n\n  const [users] = useSelector(state => [state.user.usuarios]);\n\n  const [stats, setStats] = useState()\n  //para controlar si tiene listas cada eleccion \n\n  //console.log(elections, \"si llega estos datos\");\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n\n    dispatch(userStartLoading());\n\n    \n   \n  //   $(document).ready(function() {\n  //     $('#example').DataTable();\n  // } );\n   \n\n  }, [dispatch])\n\n\n\n  const openModal = () => {\n    dispatch(uiOpenModal());\n    \n  }\n\n  const onSelectUser = (e) => {\n    dispatch(userSetActive(e));\n    dispatch(uiOpenModal());\n    //console.log(e)\n  }\n\n\n  useEffect(() => {\n   \n   \n    init();\n    obtenerListas();\n  }, [])\n\n  \n  \n  const obtenerListas = () => {\n\n\n    getStats()\n      .then(tx => {\n\n\n        console.log(tx);\n        let tamaño = tx.length;\n        \n          setStats(tamaño);\n        \n        \n        console.log('es lo q va ', tx.length);\n\n        //en caso de error al no desplegar la blockchain , borrar este if y metdoo\n        // if (tamaño === 0) {\n        //   resetStatusVote()\n        // }\n        //setproposal(tx)\n      })\n      .catch(err => console.log(err))\n  }\n\n \n\n  const resetStatusVote = () => {\n  \n    console.log('ingresa a cambiar ststaus', users.length);\n    for (let i = 0; i < users.length; i++) {\n      //console.log(users.length)\n      const data = {\n        _id: users[i]._id,\n        cedula: users[i].cedula,\n        nombre: users[i].nombre,\n        correo: users[i].correo,\n        rol: users[i].rol,\n        vote: false //true\n      }\n      console.log('esto pasa maldita', data);\n      dispatch(userStartUpdate(data));\n    }\n\n\n    dispatch(userStartLoading());\n  }\n\n \n\n\n  const onDeletUser = (e) => {\n    dispatch(userSetActive(e));\n\n\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    Swal.fire({\n      title: 'Eliminar',\n      text: \"Estas seguro de eliminar este usuario?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delet it!',\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        dispatch(userStartDelete());\n\n      } else if (\n        /* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelado',\n          'Tu usuario sigue activo :(',\n          'error'\n        )\n      }\n    })\n  }\n\n  const handleFileChange = (e) => {\n    //console.log(e.target.files);\n    file = e.target.files[0];\n    const target = e.target;\n\n    if (file) {\n      // dispatch(startUploading(file));\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(target.files[0])\n      reader.onloadend = (e) => {\n        var data = new Uint8Array(e.target.result);\n        var workbook = XLSX.read(data, { type: 'array' });\n        //console.log(workbook, 'workbook');\n\n        workbook.SheetNames.forEach(function (sheetName) {\n\n          XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n          //console.log(XL_row_object, 'xl');\n          //console.log(XL_row_object.length, 'xl deimesnsion');\n\n        })\n        //console.log(XL_row_object, 'ya converido de xls');\n\n      }\n    }\n  }\n\n  const saveListasBDD = () => {\n\n    file = \"\";\n    setTimeout(() => {\n      for (let i = 0; i < XL_row_object.length; i++) {\n        dispatch(userStartAddNew(XL_row_object[i]))\n      }\n    }, (2000));\n\n    dispatch(userStartLoading())\n    document.getElementById(\"file\").value = '';\n    //console.log(XL_row_object, 'metodo add bdd');\n  }\n\n  ///test take dates of blockchain\n\n\n\n  //console.log(stats, 'stas cargado 1');\n\n  if (users.length===0) return <div className=\"padre\">\n\n  <div className=\"spinner\">\n    <span>Loading users...</span>\n    <div className=\"half-spinner\"></div>\n  </div>\n</div>\n\n\n\n  if (stats===undefined ) return <div className=\"padre\">\n\n    <div className=\"spinner\">\n      <span>Loading...</span>\n      <div className=\"half-spinner\"></div>\n    </div>\n  </div>\n  //console.log(stats, 'stas cargado');\n\n  if (stats === 0 && cont===0) {\n    resetStatusVote()\n    //console.log('cuantas veces entra', cont);\n    cont=1;\n  }\n\n//   $(document).ready(function() {\n//     $('#example').DataTable();\n// } );\n\n  return (\n\n\n\n    <div>\n     \n      <h3 className=\"titulos\">Usuarios</h3>\n\n      <br/>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n\n            <input\n              id=\"file\"\n              type=\"file\"\n              name=\"file\"\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n              // style={{ display: 'none' }}\n              onChange={handleFileChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Archivo de Excel</small>\n\n          </div>\n\n          <div className=\"col\">\n            <button\n              className=\"btn btn-dark userListEdit\" onClick={saveListasBDD}>\n              <i className=\"fa-solid fa-file-csv\"> </i>\n              <span> Cargar usuarios</span>\n            </button>\n          </div>\n\n          <div className=\"col\">\n\n          </div>\n\n\n        </div>\n      </div>\n\n\n      <button\n        className=\"btn btn-success fab \" onClick={openModal}>\n        <i className=\"fas fa-plus\"></i>\n\n      </button>\n\n      <br/>\n      <ToastContainer></ToastContainer>\n      <div className=\"table-responsive-sm\" >\n        <table className=\"titulos table table-hover table-borderless table-sm \" id=\"example\">\n          <thead>\n            <tr>\n\n              <th>Nombre</th>\n              <th>Cédula</th>\n              <th>Correo</th>\n              <th>Rol</th>\n              <th>Vote</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              users.map((usuario) => {\n                return (\n                  <tr key={usuario._id}>\n\n                    <td>{usuario.nombre}</td>\n                    <td>{usuario.cedula}</td>\n                    <td>{usuario.correo}</td>\n                    <td>{usuario.rol}</td>\n                    <td>{\n                      usuario.vote === true && usuario.rol !== 'ADMIN_ROLE' ?\n                        <button\n                          className=\"btn btn-success userListStatus\"\n                        >\n                          <i className=\"fa-solid fa-check\"></i>\n                        </button>\n                        : usuario.vote === false && usuario.rol !== 'ADMIN_ROLE' ?\n                          <button\n                            className=\"btn btn-dark userListStatus\">\n                            <i className=\"fa-brands fa-mixer\"></i>\n                          </button>\n                          : ''\n\n                    }</td>\n\n                    <td>\n                      <button\n                        className=\"btn btn-primary userListEdit\"\n                        onClick={() => onSelectUser(usuario)}\n\n                      >\n                        <i className=\"fas fa-edit \"></i>\n                      </button>\n                      {\"   \"}\n                      <button\n                        className=\"btn btn-danger userListEdit\"\n                        onClick={() => onDeletUser(usuario)}\n                      >\n                        <i className=\"fas fa-trash-alt\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n <script src='https://code.jquery.com/jquery-3.5.1.js'></script>\n    <script src=\"https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js\"></script>\n    <script src=\"https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js\"></script>\n   \n\n      </div>\n      <UserModal/>\n\n     \n     \n\n\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\n\nimport { EleccionScreen } from '../components/elecciones/EleccionScreen';\nimport { ListaScreen } from '../components/listas/ListaScreen';\nimport { CandidatoScreen } from '../components/candidatos/CandidatoScreen';\nimport { NavAdmin } from '../components/ui/NavAdmin';\nimport { UserScreen } from '../components/user/UserScreen';\n//import { ResultsScreen } from '../components/vote/ResultsScreen';\n\n\n\nexport const DashboardRoutes = () => {\n\n    return (\n        <>\n            <NavAdmin/>\n\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"elecciones\" element={<EleccionScreen/>}/>\n                    <Route path=\"listas\" element={<ListaScreen/>}/>\n                    <Route path=\"candidatos\" element={<CandidatoScreen/>}/>\n                    <Route path=\"usuarios\" element={<UserScreen/>}/>\n                    {/* <Route path=\"resultados\" element={<ResultsScreen/>}/> */}\n                    <Route path=\"/\" element={<EleccionScreen/>}/>\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { candidatoStartLoading } from '../../actions/candidates';\nimport { listaStartLoading } from '../../actions/lists';\n\nimport { getStats, init, vote } from '../../helpers/getWeb3Vote';\n\nimport Swal from 'sweetalert2';\nimport { electionStartLoading } from '../../actions/elections';\nimport moment from 'moment';\nimport { Table } from 'react-bootstrap';\nimport { userStartLoading, userStartUpdate } from '../../actions/users';\n\n\n// const initialState = [\n//   'Proposal 1', 'Proposal 2', 'Proposal 3'\n// ]\nlet tamaño = 0;\nexport const VoteScreen = () => {\n\n\n  const [lists] = useSelector(state => [state.lista.lista]);\n  const [cedula] = useSelector(state => [state.auth.cedula]);\n  const dispatch = useDispatch();\n\n  //advertencia --- eliminar si tarda en ingresar\n  const [stats, setStats] = useState(0)\n\n  const initialState = {}\n  const [state, setState] = useState(initialState);\n\n  const [users] = useSelector(state => [state.user.usuarios]);\n\n\n  const [elections] = useSelector(state => [state.eleccion.election]);\n  //testeando listas de elecciones de\n  // const { election: elections } = useSelector(state => state.eleccion);\n\n\n  //console.log(tests[0].lists, 'eso deberian ser las listas')\n\n  useEffect(() => {\n\n    dispatch(electionStartLoading());\n\n  }, [dispatch])\n\n  useEffect(() => {\n\n    dispatch(userStartLoading());\n\n\n  }, [dispatch])\n\n\n  useEffect(() => {\n    init();\n    getStats()\n      .then(tx => {\n        tamaño = tx.length;\n        setStats(tamaño);\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n\n  }, [state])\n\n  let nuevo = [];\n  const listasEleccion = () => {\n    // solo las listas de la eleccion 1 por el mometo\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].eleccion._id === (elections[0].id)) {\n        nuevo.push(lists[i])\n      }\n\n    }\n\n    let votoBlanco = {\n      id: \"231442\",\n      nombre: \"Voto Blanco\",\n      img: \"https://res.cloudinary.com/universidad-tecnica-del-norte/image/upload/v1646872890/images%20vote/boto_blanco_mrvevr.png\",\n      descripcion: \" \",\n      candidates: []\n    }\n\n    let votoNulo = {\n      id: \"23146\",\n      nombre: \"Voto Nulo\",\n      img: \"https://res.cloudinary.com/universidad-tecnica-del-norte/image/upload/v1646873036/images%20vote/VOTO_NULO_whrvhx.png\",\n      descripcion: \" \",\n      candidates: []\n    }\n\n    if (lists[0].voteBN === true) {\n      if (nuevo.length > 0) {\n        nuevo.push(votoBlanco)\n        nuevo.push(votoNulo)\n\n      }\n    }\n    //console.log(nuevo, 'nueva lista con o sin vot B/n')\n  }\n\n  const buscarUsuario = () => {\n\n    let idUsuario = ''\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].cedula === cedula) {\n        idUsuario = users[i]._id;\n        const data = {\n          _id: idUsuario,\n          vote: true\n        }\n        dispatch(userStartUpdate(data));\n        //console.log(data, 'ya voto ver');\n      }\n    }\n  }\n\n  const onSelectElection = (e) => {\n\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: 'btn btn-success',\n        cancelButton: 'btn btn-danger'\n      },\n      buttonsStyling: false\n    })\n\n    Swal.fire({\n      title: 'Estas seguro?',\n      text: \"No podrás revertir esto!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, send it!',\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: 'Sending...',\n          text: 'Please wait...',\n          allowOutsideClick: false,\n          onBeforeOpen: () => {\n            Swal.showLoading();\n          }\n        });\n\n        const init = {\n          ...state,\n          proposal: e,\n          ci: cedula\n\n        }\n        setState(init)\n\n        if (init.ci) {\n          vote(init)\n            .then(tx => {\n              Swal.close();\n              buscarUsuario();\n              //Swal.fire(\"Enviado\", \"Voto generado con exito!\", \"success\");\n              let url = `https://testnet.bscscan.com/tx/ ${tx.transactionHash}`;\n              //console.log(tx)\n              Swal.fire({\n                icon: 'success',\n                title: 'Voto generado con exito!',\n                footer: '<a id=\"enlace\" href=\"\">Url del voto</a>'\n              })\n              var elemento = document.getElementById(\"enlace\");\n              elemento.href = url\n              elemento.target = \"_blank\"\n              setState(initialState)\n\n            })\n            .catch(err => {\n              console.log(err)\n              Swal.fire(\"Error\", \"Ya has votado!\", \"error\");\n            })\n        }\n      } else if (\n        /* Read more about handling dismissals below */\n        result.dismiss === Swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons.fire(\n          'Cancelado',\n          'Tu voto ha sido cancelado :(',\n          'error'\n        )\n      }\n    })\n\n  }\n\n  useEffect(() => {\n    dispatch(listaStartLoading());\n\n  }, [dispatch]);\n\n  //llamar a la blockchain para verificar si estavacia\n\n  const obtenerListas = () => {\n    getStats()\n      .then(tx => {\n        tamaño = tx.length;\n      })\n      .catch(err => console.log(err))\n  }\n\n  //...---------------------------\n\n  const [candidatos] = useSelector(state => [state.candidato.candidatos]);\n\n  useEffect(() => {\n    dispatch(candidatoStartLoading());\n  }, [dispatch])\n\n  if (elections.length === 0) return <span>No hay elecciones disponibles</span>\n\n  const start = moment(elections[0].start);\n  const end = moment(elections[0].end);\n  const now = moment().seconds(0).add(0, 'hours'); // 3:00:00\n  const fechaActual = now;\n\n  if (elections.length > 0 && lists.length > 0) {\n    listasEleccion();\n  }\n\n  if (nuevo.length === 0) return <span>No hay listas</span>\n  if (users.length === 0) return <span>No hay electores registrados</span>\n  obtenerListas();\n\n  //console.log('estats actual', stats);\n\n  // if (stats === 0) {\n  //   console.log('sin listas en la blockchain!');\n  // }\n  if (stats === 0) return <div className=\"padre\">\n    <div className=\"spinner\">\n      <span>Loading...</span>\n      <div className=\"half-spinner\"></div>\n    </div>\n  </div>\n\n  const nameElection = (elections[0].nombre);\n\n  return (\n    <div >\n\n      <h2 className=\"titulos\">{nameElection}</h2>\n\n      {(fechaActual.isSameOrAfter(start) && fechaActual < end) ? <div>\n        <br />\n        <div className=\"table-responsive-sm\">\n          <Table className=\"titulos table table-hover table-sm\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Descripción</th>\n                <th scope=\"col\">Imagen</th>\n                <th scope=\"col\">Candidatos</th>\n                <th scope=\"col\">Votar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                nuevo.map((lista, index) => {\n                  return (\n                    <tr key={lista.id} >\n\n                      <td data-label=\"Nombre\" className='tabla_letra'>{lista.nombre.toUpperCase()}</td>\n                      <td data-label=\"Descripción\">{lista.descripcion}</td>\n\n                      <td data-label=\"Imagen\">\n                        {\n                          (lista.img)\n                          && (\n\n                            <div className=\"votes__image\">\n                              <img className='imgCentrar'\n                                src={lista.img}\n                                alt=\"\"\n                              />\n                            </div>\n                          )}\n                      </td>\n\n                      <td data-label=\"Candidatos\">{candidatos.map((candidate) => {\n                        return <p key={candidate.id}> {lista.id?.search(candidate.lista?._id) ? '' : `${candidate.nombre} ${candidate.apellido}: ${candidate.cargo} `} </p>\n                      })}</td>\n\n                      <td>\n                        <button\n                          className=\"btn btn-primary\"\n                          onClick={() => onSelectElection(index)}\n                        >\n                          <i className=\"fas fa-vote-yea fa-lg\"></i>\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n        :\n        <div>\n          <h1 className='titulos'>Eleccion Inactiva</h1>\n          <h2 className='titulos'>Fecha de inicio: {moment(start).format('YYYY-MM-DD HH:mm:ss')}</h2>\n          <h2 className='titulos'>Fecha de fin: {moment(end).format('YYYY-MM-DD HH:mm:ss')}</h2>\n        </div>\n      }\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogout } from '../../actions/auth';\n\n\n\nexport const NavUser = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n\n    const handleLogout = () => {\n        //history.replace('/login');\n        dispatch(startLogout());\n    }\n\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <Link\n                className=\"navbar-brand\"\n                to=\"/\"\n            >\n                Vote\n            </Link>\n\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul className=\"navbar-nav mr-auto\">\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto \">\n\n                <span className=\"nav-item nav-link text-info\">\n                        {name}\n                    </span>\n                \n                        <button\n                            className=\"btn btn-outline-danger \"\n                            onClick={handleLogout}\n                        >\n                            <i className=\"fas fa-sign-out-alt\"></i>\n                            <span> Salir</span>\n                        </button>\n            \n                </ul>\n            </div>\n\n        </nav>\n    )\n}","import React from 'react';\n\nimport { Routes, Route } from 'react-router-dom';\n\n\nimport { VoteScreen } from '../components/vote/VoteScreen';\nimport { NavUser } from '../components/ui/NavUser';\n\n\n\nexport const DashboardUser = () => {\n    return (\n        <>\n            <NavUser />\n\n            <div className=\"container\">\n                <Routes>\n                    <Route path=\"votos\" element={<VoteScreen />} />\n\n                    <Route path=\"/\" element={<VoteScreen  />} />\n\n                </Routes>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { useSelector } from 'react-redux';\nimport { DashboardUser } from './DashboardUser';\n\nimport { DashboardPublic } from './DashboardPublic';\n//import { startChecking } from '../actions/auth';\n\n\n\nexport const AppRouter = () => {\n\n\n    const { auth } = useSelector(state => state);\n    // const dispatch = useDispatch();\n\n    // useEffect(() => {\n    //     dispatch(startChecking())\n    // },[dispatch])\n\n    // console.log(auth.checking);\n    // console.log(auth.rol);\n\n\n\n  \n    // if(auth.checking){\n    //     return <h1>Espere...</h1>\n    // }\n\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/login\" element={\n                    <PublicRoute>\n                         {/* <LoginScreen /> */}\n                        {/* <ResultsScreen/>  */}\n                        <DashboardPublic></DashboardPublic>\n                    </PublicRoute>\n                }\n                />\n                <Route path=\"/*\" element={\n                    <PrivateRoute>\n                        {(auth?.rol === \"ADMIN_ROLE\") ?\n                            <DashboardRoutes />\n                            : <DashboardUser />\n                        }\n                    </PrivateRoute>\n                }\n                />\n\n            </Routes>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <CalendarApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}